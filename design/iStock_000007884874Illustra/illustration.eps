%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.2
%%For: (\700\744\754\750\755\750\761\762\760\740\762\756\760) ()
%%Title: (buttons.eps)
%%CreationDate: 11/10/2008 4:25 PM
%%BoundingBox: 73 185 520 629
%%HiResBoundingBox: 73.4067 185.9189 519.7422 628.1206
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 8.4375 8.44434 586.8379 833.4448
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -891.3501 1064.2671 0.6667 1414 941 18 0 0 44 79 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 20143 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDA2FFA8FD43FFA8FD36FFA8FFFD07A8FFA8FD39FFFD09A8
%FFA8FD2EFFA8A87DA87DA8A8A87DA8A8A87DA87DA8A8FD31FFFD04A87DA8
%7DA8A8A87DA8A8A87DA87DA8A8FD28FFFD08A87DA87D7D7DA87DFD05A87D
%A8A8FD2DFFFD08A87DA17D7D7DA87DFD05A87DA8A8FD22FFA8FFFD04A87D
%7D525852522E5252522E525258527D7DA87DA8A8FD29FFFD06A87D7DFD04
%524C524C524C52527D76A8A8A87DA8A8FD22FFA8FFA8A87D7D525252764B
%FD066F765258527D7DFD04A8FD27FFA8CAA8FFA8A8767752765258515857
%57575851585276527D7DFD04A8FD1EFFA8A8A8FFA17D52524B6F686F6893
%8C9393936893686868755252527DFD05A8FD23FFA8A8A8FF7D7D52525157
%325D575D5D825D81575D57572D58525252FD05A8FD1BFFA8FFA8FF7D7D52
%76689393BC9AC3C3C3BDC3C3C3BDC39A9368936F76527D7DFFA8A8CAFD21
%FFA8FFFFA87D775258575D5D8282ADADADACCEADADA6AD8282575D577652
%7DA8FFA8FD1AFFA8FFA8A85252516F689394C3BDC3BCC3BDC3BCC3BDC3BC
%C3BDC39393686F52527DFD04A8FD1FFFA8FFA8A852525157568282ADACAD
%A6ADA6ADA6ADA6ADA6ADA6AC815D335852777DFFA8A8A8FD1AFF587D6F93
%8CBCFD04C3BDC3C3C3BDC3C3C3BDC3C3C3BDC4C3BC6893767D7DFD24FFA8
%527D575D5DADADCEADADACCEADADACCEADADACCEADADACCEAC825758527D
%7DFFA8FD16FFA8FFFFA8527D6F6868C3BDC3BCC3BCC3BCC3BCC3BCC3BCC3
%BCC3BCC3BCC3BDBC68686F5952FFA8FFA8FD1BFFA8FFFFA8527C575781AC
%A6ACA6ACA6ACA6ACA6ACA6ACA6ACA6ACA6ACA6ACA682325752527DFFA8FD
%18FF587D6F8C93C3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3
%BDBD688C6F7D7DFD20FFA8527D575D81ACA5ACABACA5ACABACA5ACABACA5
%ACABACA5ACABACA5ACABAB565D587D7DFD14FFA8FFFFFF527D6F6868BDBC
%BC9ABDBCBD9ABDBCBC9ABDBCBC9ABDBCBCBCC3BCBC9ABDBCBC68686F597D
%FFA8FD19FFA8FFFFA8527D57575DAB81AB81AB81AB81AB81AB81AB81AB81
%AB81AB81AB81AB81ABA581325752777DFFA8FD14FF7D7D758C68C3BCBDBC
%C3BCBD93BDBCBDBCC3BCBDBCC3BCBDBCBC94C3BCC3BCBDBCBC6893767DA8
%FD1DFF7D7D575D5DACABACA5ACA5ACA5ACA5ACA5ACA5ACA5ACA5ACA5ACA5
%ACA5ACA5ACA581575E527DA8FD12FFA8FFA87D528C689AFD04BC9ABC9393
%68BCBCBC9ABCBCBC9ABCBCBC689393BC9AFD04BC93686F527DA8FFA8FD17
%FFA8FF7D77575D57A581AB81AB81AB81AB81AB81AB81AB81AB81AB81AB81
%ABA58156AC81AB815D565852A1FFFFA8FD11FF7D7D936893FD06BC8CA1FF
%9A68FD09BC68CAA89393FD05BC9493687659A8FD1AFFA87D7C5D5781A5AB
%81AC81AB81AC81AB81AC81AB81AC81AB81AC81AB81AB57825CAC81AC815D
%577C77CAFD0FFFA8FFFFA85276686893BC94BC93BC689AAFFFA89A68BC94
%BC93BCBCB668CAAFAFA89393BC93BC94BC688C687652FD17FFA8FFA87D52
%58565781AB81A581AB81A581AB81A581AB81A581AB81A581AB81A556AEFF
%5756AB8181575D577D7DFFA8FD10FF7D7D6F9368FD05BC8CA1FFFFA8FFAF
%9A8CFD05BC68CAFFFFA8FFA89393FD05BC68936F7DA8FD19FF7D7D575D57
%AC81AC81AC81AC81AC81AC81AC81AC81AC81AC81AC81AC5CADFFFFA88281
%AC8182575D587DA8FD0EFFA8FFA87D6F8C689393BC93BC689AFFAFA8FFA8
%AFA89A68BC93B668A8AFFFA8A8A8FFA89393BC93BC9393688C767DA8FFA8
%FD13FFA8FF7D7D575D578181AC818181AC818181AC818181AC818181AC81
%8181AC8182FFFFA8FFA85E5CAB575D575776A8FFFFA8FD0CFFA8A87D9368
%9392BC93BC8CA1FFFFA8FFA8FFA8FFA89A8CB568CAFFFFA8FFA8FFA8FFA8
%9393BCB5B568938C9A7DA8FD16FFA8A27D5D575D5DAC81AC81AC81AC81AC
%81AC81AC81AC81AC81AC81AC815DAEFFA8FFA8FFA8828182575D577D7DFD
%0EFFA8A87D7D688C689393B593939AFFFD05A8FFA8AFA89A68A8AFFD04A8
%FFFD04A86F9393BC9392688C6F7D7DFFA8FD11FFA8FFA8A8777C575733FD
%04818281818182818181828181818281818182815D83FFA8A8A8FFA8CBA8
%82565D575D587D7DFFA8FD0AFFA8FFA8A8769368938CBC93BCB5939AFFAF
%FFA8FFA8FFA8FFA8CAAFFFA8FFA8FFA8FFAFFF6FB5B5BCB5B58C938C937C
%A8A8FD13FFA8FFA2A2585D575E5DAC81AC818281AC818281AC818281AC81
%8281AC818182FFCBFFA8FFA8FFA8FF835D578257827DA8A8FD0CFFA8A87D
%9A6893689393B593B5938C9AFFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FFAF
%A86F9393B593B59393689368767DA8A8FD11FFA8FFA8A87D5D575D57FD04
%8182818257575782818281818182FD048157FFA8FFA8A8A8FFA8FF835D57
%5D575D577D7DFFA8FD0AFFA8FFA87D6F938C9368B5B5B593B5B5929AFFAF
%FFA8FFA8FFA8FFA8FFA8FFA8FFAFFF6F9393B593B593938C938C937684A8
%FFA8FD11FFA8FF7D7D575D575D5782818281AC815DA88357828182818281
%82818256AEFFFFA8FFA8FFA8FFA85D5D82575D575D7DA8A8FD0AFFFD04A8
%7D93689368938CB592B58CB58C8C76FFA8FFA8FFA8FFA8FFA8FFA8FFAFCA
%6E9293B58CB5929368936893689A7DA8A8FD11FFA8A8A8A27C5D575D575D
%57828182575DA8FFA85D57825782818257825683FFFFA8FFA8FFA8FFA85E
%5682575D575D57837DA8A8FD0AFFA8FFA8A18C938C938C9393B593B593B5
%93939AFD0DFF6FB5B5B593B593B5929392938C9393A8A8FFA8FD11FFA8FF
%7D8357825782578281825D5DAEFFA8FFA85D5D82818281825D82FFFFA8FF
%A8FD04FF83578257825D8257817CA8A8FFA8FD08FFFD04A87D9368938C93
%8C9392B58CB592B58C8C9AFFA8FFFFFFA8FFFFFFAFFF6F8C8CB592B58CB5
%8C938C938C93689A7DA8A8FD11FFFD04A87C5D575D575D57825757A8FFA8
%FFA8FF835757828182575DA8FFA8FFA8FFA8FFFF833282575D575E575D57
%837DA8A8FD0AFFA8FF7DA893938C9392938CB593B592B593B568CAFD0BFF
%A08CB593B593B592B593938C938C9393A8A8FFA8FD11FFA8A87D83575D57
%825782575DAEFFA8FFFFFFA8FF835D8182825D83FFFFFFA8FD04FFAE5682
%5D825D825782575D7CA8A8FFA8FD08FFFD04A87D938C9368938C938C938C
%938C9368CAFFFFA8FFA8FFA8FFA8FFA8FFAF9A68938CB58C938C938C938C
%938C937DFD04A8FD0FFFFD04A87C5D575D575E5757A8FFA8FFA8FFA8FFA8
%FF5857575D57FFA8FFA8FFA8FFFFAE3281575D575E575D575D57837DA8A8
%FD0AFFA8FFA8A893938C9393938CB593B593B568CAFD0FFFA168B593B592
%B593938CB593939AA8A8FFA8FD11FFA8FFA2A8578257825D825783FD0AFF
%575D57FD09FF5781828257825D8257825D827DA8A8FFA8FD08FFFD04A87D
%9A8C938C938C938C938C9268CAFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%9A68B58C938C938C938C938C9A84A8A8A8FD10FFFD04A87D82575D578257
%5E3282FFFFA8FFFFFFA8FFFFCF32AEFFFFA8FFFFFFA9FF58575782578257
%82575D578257A77DFFA8FD0AFFA8FFA8A89A9392938CB5939392B568CAFD
%13FFA168B593B58CB593938C93A1A8A8FFA8FD11FFA8FFA8A85782578257
%825D825682FD12FF825D828257825D8257825D825782A8A8A8FD0BFFA8A8
%A884A18C938C938C938C9368CAFFFFA8FFA8FFA8FFFFCA9AFFFFFFA8FFA8
%FFA8FFFF9A68B58C938C938C938CFD04A8FD12FFA8A8A8A282575E575D57
%8257823282FFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FF835757825782578257
%5E5782575D58FD04A8FD0AFFA8FFA8A8A1938C9392B593B568CAFD0AFF6F
%8C9AFD0AFF9A8CB593B593B58CBCA8A8A8FD13FFA8FFA8A883825D825782
%5D825D825782FD0EFFA85D5D8282825E825E825D825D8257A7A8A8A8FD0C
%FFFD04A893938C938CB58C936FFFFFFFA8FD05FF6F9393939AFFAFFFFFFF
%A8FFFFA168B58C938CB58C8C9AFD04A8FD13FFFD04A85782575E57825782
%57825782FFFFAEFFA8FFFFFFA8FFFFFFA85D57825D825D82578257825782
%578283FD04A8FD0BFFFD04A8A18CB593B58CB593936FFD07FF6FB5B5B693
%939AFFAFFFA8FFAFA168B593B593B58CB593A8A8FFA8FD14FFFD04A88357
%825D8257825E825E825782FD0BFF8257FD07825D825E82578282A8A8FFA8
%FD0CFFA8A87DA8A89A8C938C938CB58C8C6FFFFFCAA8A86F9393B593B593
%939AFFA8A8A8A168B593B58CB58C938CA1FD05A8FD13FFFD04A8835E5782
%57825782578257825782FFFFA8FFA8FFA8FFCB8256828182828257825D82
%5782575E57FD05A8FD0DFFA8A8A8AFA1B593B593B593B593B593FFFFCA6F
%B5B5BCB5BCB5BCB5939AFFAFA168B5B5B593B593B58CBCA8FFA8A8A8FD15
%FFA8A8A8FF83825E825DFD07825782FD07FFAD57AC82ACFD0A8257A7FD05
%A8FD0DFFA87DA8A8AF9AB58C938CB593B593B56FCA6F93B5B693BC93BC93
%BCB5939AA868B593B593B58CB58C93A1AFA8A87DFD16FFA87DA8A8A85782
%578257828282818282825782FFFFA8FFCBA832FD0B8257825782A8CBA8A8
%A8FD0FFFA87DA8A8CA93B593B593B593B593B568B5B5BCB5BCB5BCB6BC93
%BCB69368BCB5B693B593B593B59AFFFD04A8FD16FFFD06A857FD0A82AC57
%82FFFFA8FF578282AD82A682ACFD06825D82A7FFA8A8A8FD10FFA8A87DA8
%A8A88CB58CB58CB593B593B593B693BC93BC93BC93BC93BC93B693B693B5
%93B593B593FFA8A87DA8A8FD17FFA8A87DA8A8A75782578257FD0682A657
%5EFFFF57FD0482A6FD068281825D8282FFA8A87DA8FD11FFFD04A8AFCA93
%B593B5B5BC93BCB5BCB5FD0BBCB6BCB5BC93BCB5B593FFAFFD04A8FD19FF
%7DA8A8FFA8AD81FD0682AD82AC82AD5D828282A6AD82AD82AD82AD82A682
%88828283FFFD04A8FD13FF7DA87DA8AECA93B593B593B593BC93BC93BCB6
%BC94BCBCBC94BCB6BC93BC93B593B593CAA8A87DA8A8FD1AFFA87DA87DCB
%A8A75DFD0682A682A682AD5D5D82AD82A682ACFD0682818283FFA8A87DA8
%A8FD14FF7DA87DCAAFCA93B593BCB5BC93FD08BCBDFD06BC93BCB5B59AFF
%FFA87DA8A8FD1CFFA87DA8A8FFCBAE828282AC82A682AD82AD82ADA6AD82
%ADA6AD82AD82AC82AC8282A7FFCBA87DA8A8FD15FFA87D7D7DA8A8FF9AB5
%93BC93BC93BC94BC94BCBCBC9ABCBCBC93BC93BC93BCA1FFA8A87D7D7DFD
%1EFFA87D7D7DA8A8AE828281FD0482AC82A682AD82AC82AD82A682AC8282
%81A7A8FFA8A87D7D7DFD18FF7DA87DA8FFFFCABDB5BCB5FD04BCBDBCBDBC
%C3BCBDFD04BCB5C3CAFFA8A87DA87DFD20FFA87DA87DFFFFFFA7AD82AC82
%ADA6ADA6ADACADA6ADA6ADA6AD82AC82AEFFFFA8A87DA8A8FD1AFF7D7D7D
%A8A8FFAFCA9ABC93BCB6BCBCBDBCBDBCBDBCBC94BCA1CAAFFFA8FD047DFD
%22FFA87D7D7DA8A8FFA8AE828282AC82AC82ADA6ADA6AD82AC82ADA7FFFF
%FFA87D7D7DA8FD1CFFFD047DA8FFFFFFCACAC3C3BCBDBCC3BDC3BCC3C3CA
%CAFFFFFFFD047DA8FD25FF7D7D7DA8A8FFFFFFAEAEA7ADA6ADA6ADADADA6
%ADADCFFFFFFFA8FD047DA8FD1EFF7D7D527D7DA1A8FD05FFCACAA8FFCAFD
%05FFA8A17D7D527DA8FD27FF7D7D527D7DA8A8FFFFFFA8FFAECFA8FFCFFF
%FFFFCBA8FD047D52A8A8FD20FFA8A8FD057DA8A8FFAFFD05FFA8FFA8A8FD
%057DA8FD2AFFA8A8FD057DA8A8FFCBFD05FFA8FFA8A8FD057DFD24FFA8A8
%7D7D527D527D52FD077D527D527D527D7DFD2DFFA8A87D7D527D527D52FD
%077D527D527D527DA8FD22FFA8FFA8A8A8FFA8A8FD047D527D7D7D527D7D
%7D527D7DA8A8FFA8FFA8FFCAFD25FFA8FFFD05A8FD057D527D7D7D52FD06
%7DA8A8FFA8FFA8FD1AFFA8FFA8FFFD06A87DA8FD047D767D527D527D52FD
%047DA87DA87DFD04A8CAA8FFA8FD1DFFA8FFA8FFFD04A87DA87DA8FD047D
%527D527D527D52FD047DA87DA87DFD04A8FFA8FFA8FD18FFA8FFA8FFFD06
%A87DA87DA1FD057DA87DA87DA87DFD06A8FFA8FFA8FD21FFA8FFA8FFFD06
%A87DA8FD077DA87DA87DA87DFD06A8FFA8FFA8FD18FFA8FFA8FFA8FFFD06
%A87DA87DA87DA87DA87DA8A1A87DFD04A8FFA8FFA8FFA8FD21FFA8FFA8FF
%A8FFFD06A87DA87DA87DA87DA87DA8A1A8A1FD04A8FFA8FFA8FD24FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD33FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD34FFA8FD43FFA8FDFCFFFDFCFFFDFCFFFDFCFFFDC7FFA8FF
%A8A8A8FFA8FFA8FD3BFFA8FFA8A8A8FFA8FFA8FD30FFFD04A87DA8A1A87D
%FD06A8FD35FFFD04A87DA8A1A87DFD04A8CAA8FD2AFFA8A87DA87DA8A8A8
%7DA87DA87DA8A8A87DA87DA8A8FD2FFFA8A87DA87DA8A8A87DA87DA87DA8
%A8A87DA87DA8A8FD26FFFD06A87D7D767D527D52FD047DFD06A8FD2DFFFD
%06A87D7D527D527D52FD047DFD06A8FD22FFFD06A87D7651FD0452532E52
%52525152527D7DFD06A8FD27FFFD06A87C52515252522E532E5252525152
%527D7DFD06A8FD1EFFA8A8A8FFA87D527652532F300E310E370E310E302F
%535276527DA8FFA8A8A8FD25FFA8A8A8FF7D7D527652532F300E310E370E
%310E302F53527652A1A8FFA8A8A8FD1CFFFD04A8765251530D0F0E373661
%61616061616136370E0E2F5351527DFD04A8FD23FFA8CAA8A8525252530D
%0F0E37366161616061616136370E302F52517C7DFD04A8FD1AFFA8FFFFA8
%527C53300E37618B8BAF8BAF8BAF8BAF8BAF8B8B37370E36527C7DA8A8FF
%A8FD21FFA8FFFFA8527C53310F61618B8BAF8BAF8BAF8BAF8BAF8B853737
%0E5A527C7DFFA8FFA8FD18FFA8FFA8A852522F0F1561858B8B8B858B858B
%858B858B858B8B8B85610F0E2F7652A8A8FFA8FD1FFFA8FFA87D52530E0F
%3785FD048B858B858B858B858B858B8B8B61610E30527676A8A8FFA8FD16
%FFA8FFFF7D527D300F378B8B8B858B8B8B858B8B8B858B8B8B85FD058B37
%0F2F7D52A8FD20FFA8FFA87D52590E3761AF8B8B858B8B8B858B8B8B858B
%8B8B85FD058B150F2F7C7CFFCAFD16FFA8FFA87D52530E0F618B618B618B
%618B618B618B618B618B618B618B618B618B360F0E7D52A8A8FFA8FD1BFF
%A8FFA87D52530E37618B618B618B618B618B618B618B618B618B618B618B
%618B0E0F2F7C52A8A8FFA8FD15FFA876590E37618B618B618B618B618B61
%8B6167618B618B618B618B618B618B3715307D52FD20FFA1525A0F37618B
%618B618B618B618B618B618B618B618B618B618B618B8B8B3715307D7DFD
%17FFA8527D0E0F368B61616167FD0461305B36615A5B365B366161676161
%61676167360F307C52FD1BFFA8FFFFA852590E0F618B6161616761616167
%6161616761616167616161676161616761610E0F2F7C7DFFA9FD14FF7D7D
%3015376761676167616761673785CFFFA8FFA8FFA85B6167616761676167
%61610E15307D7DFD1DFF767D0E3737676167616761676167616761676167
%61676167616761676167616761610E37597DA8FD12FFA8FF7D7C2F0F0E61
%61613C613D613C6161375ACA7DA87DA87DA830613D613C613D613C61613D
%0E0F537CA8FFA8FD19FF767D0E0F0E613D613C613D613C613D613C613D61
%3C613D613C613D613C613D613C6161370E37527DA8FFA8FD10FFA87D5937
%0E3761613D673D613D673D673785FD07A85B3D613D673D613D673D613D37
%0F377CA8FD1AFFA87D5A150E6161613D673D613D673D613D673D613D673D
%613D673D613D673D613D673D6737370F5A7CA8FD0FFFA8FFFFA152360E0F
%36613D3D3D613D3D3D613D375ACF7DA87DA8A8A836FD043D613D3D3D613D
%3D14370E5A76A8FD16FFA8FFA87D52370E3736613D3D3D613D3D3D613D3D
%3D613D3D3D613D3D3D613D3D3D613D3D3D613D3D0E370E7D7CFD10FFA8FF
%7D7D0E370FFD0A3D611585FD07A85B37FD0B3D0E37307D7DFD18FFA87C5A
%0F3715FD203D370E37367DA8FD0EFFA8FF7D7D300F0E37153D143D373D14
%3D373D14155ACA7DA8A8A8A7A8363D143D373D143D373D143D14150E1553
%7DA8FFA8FD13FFA8FF7D7D0E0F0E37373D143D373D143D373D143D373D14
%3D373D143D373D143D373D143D373D143D140F0E37597DA8FFA8FD0CFFA8
%A87D370E37153D153D3D3D153D3D3D153D1585CAFD04A8FFA85B153D3D3D
%153D3D3D153D3D3D0E370F5A7DA8FD14FFA8FFA8A159370E37153D153D3D
%3D153D3D3D153D3D3D153D3D3D153D3D3D153D3D3D153D3D3D153D3D370E
%370F5A7DFD0EFFA8A87D7E0E150E37153D143D153D143D153D15155ACFFD
%06A8361B143D153D143D153D143D15150E370E7D7DFFA8FD13FFA8A87C5A
%0E150E37153D153D153D153D153D153D153D153D153D153D153D153D153D
%153D153D143D14150E15307D7DFFA8FD0AFFA8FFA8A136370F370E3D3737
%14151515141515150E85CFA8A8FFA8CAA8371515141515151415153D153D
%15370E3759A7A8FD13FFA8FFA77D30370F37143D37370E1514150E151515
%141515151415151514151515141515151415153D153715370E377DA8A8FD
%0BFFA8A8A87D360E370E15143D0E855A855A855A855A6184FFFD06A87E85
%5A855A855A855A850E3D14370E150E5A7DA8A8FD11FFFD04A87D370E370E
%15141530855A855A7F5A7F5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A5B5A5A5A
%370E3D0E370E150E7E7DA8A8FD0AFFA8FFA8A2363715370E3D1537FFFFCF
%FFCFFFCFFFCFFFA8FFA8FFA8FFA8FFFFFFCFFD05FFA9371537153714375A
%A7A8FFA8FD11FFA8FF7D7E0E371537143D1585FFFFCFFFCAFFCACFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFCAFF5A151537153715375AA8A8FD0AFFFD
%04A87D370E370E370E3D14FFFD09A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FF
%A8A914370E370E370E5A7DA8A8FD11FFA8A8A8A759150E370E1514155AFF
%7DFD14A8FFA8A8A87F0E370E370E150E5A7DA8A8FD0AFFA8FF7DA814370E
%3715371437A9CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA83715371437153736A8A8FFA8FD11FFA8A87D7E15370E3715370E85CF
%A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5A15153714
%3715155AA8A8FFA8FD08FFFD04A87D370E150E370E150EFFFD07A8FFA8A8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFCAA90E3714150E370E367DFD04A8FD0F
%FFA8A8A8A759150E150E37140F5AFFFD07A8FFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFCF7F0E3714150E370E5A7DA8A8A8FD09FFA8FFA7A837371537
%15371537AFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD07FFA8371537
%1537153736A8A8FFA8FD11FFA8FFA1841537153715370E85FFFFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FD0BFF5A151537153715375AA8A8FFA8FD08FFFD04
%A87D370E370E3714150EFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFFFA8FFCF850E3714371437145A7DA8A8A8FD10FFFD04A8593714370E
%37140E5AFFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFFFFFA8FFFFFFCAFFCF
%5A0E37143714370E7EA1A8A8FD0AFFA8FFA8A83637153714371537A9FFA8
%FFA8FFCFFFA8FFFFFFA8FD0BFFA8FF84371537153714375AA8A8FFA8FD11
%FFA8FFA8841437153714370E7EFD18FFA8FF5A141537153714377EA8A8FF
%A8FD09FFA8A8A87D5A0E37143714370E3730373637365B36377EFFA8FFA8
%FFA8FF5A373637365B363730370E37143714150E84A1A8A8FD11FFFD04A8
%7D370E37143714150D360D363637305B3637305B3637305B3637305B3637
%305B30300D300E37143714150EA8A1A8A8FD0AFFA8FFA8A85A3715371537
%153715371537153D153D0F85FD07FF611537153D1537153D1537153D1537
%153784A8A8FFA8FD11FFA8FFA8A8363715371537153714371537153D1537
%153D1537153D1537153D1537153D153715371537153D15371561A8A8A8FD
%0BFFFD04A8840E3714371437143714371537143D15155AFFA8FFA8FFCFFF
%36371537143D1537143714371437141536FD04A8FD12FFA8A8A8A75A0E37
%14371437143714371537143D1537143D1537143D1537143D1537143D1537
%14371437143714155AFD04A8FD0BFFFD04A83715371537153D1537153D15
%3D153D1585FD04FFA8FFA837153D153D153D153D153D153715371561A8CA
%A8A8FD12FFA8A8A8CA843714371537153D1537153D153D153D153D153D15
%3D153D153D153D153D153D153D153D153715371584A8FFA8FD0CFFFD04A8
%5A1514371437143714371437143714155AFFA8FFA8FFA8FF3015143D1437
%143714371437143714377EFD04A8FD13FFA8A8A7A8361514371437143714
%3714371437143D1437143D143D143D1437143D1437143714371437143714
%37FD05A8FD0CFFFD04A837371537153D153D153D373D153D1585FD04FFA8
%FFFF37153D373D153D373D153D153D153737CAA8FFA8FD14FFFD04A88515
%3D1537153D153D153D373D153D373D153D373D153D373D153D373D153D37
%3D153D153D153760CFA8FFA8FD0CFFFD05A8601437143714371537143D15
%3D14155AFFA8FFA8FFA8FF3015143D153D143D1537143715371485FD04A8
%FD14FFFD05A8371437143714371537143D153D143D153D143D153D143D15
%3D143D153D143D15371437141536FD04A8FD0EFFA8A8A8FFA837153D153D
%153D153D153D373D1485FFFFA8FFFFFFA837153D153D373D153D153D153D
%1561A8FFA8A8A8FD15FFA8A8A8FF8437153D153D153D153D153D373D153D
%3D3D373D3D3D153D373D153D373D153D153D153D1585FD05A8FD0EFF7DA8
%A8CA841514371437143D1437143D15155AFFCAFFCAFFCFFF303D153D143D
%1437143D14371437FD05A8FD16FFA87DA8A8CA5A1514371437143D143D14
%3D153D143D373D363D373D143D153D143D1437143D14371461A8A87DA8A8
%FD0FFFA87DA8A8FF603D153D153D373D153D3D3D1561A9A984A985A98437
%FD063D153D373D153D84FFA8A8A8FD18FFFD04A8FF373D373D153D373D15
%FD083D613D613D613D3D373D3D3D153D373D153DA8FFA8A8A8FD10FFA8A8
%7DA8A8CF36151537143D153D143D373D1437143714373637143D3D3D143D
%153D143D151560FFA8A87DA8FD18FFA8A87DA8A8A814371537143D153D14
%3D373D37FD043D61FD063D143D153D143D153784FFA8A87DFD12FFA8A87D
%A8CAFF363D153D153D373D373D3D613D6761613D6761613D613D3D373D37
%3D153D85FFFD05A8FD19FFA8A87DA8CFAF373D373D153D373D373D3D613D
%6161613D613D613D613D3D373D373D153D84FFFD04A8FD13FFA87D7DA8A8
%FF3615143D143D153D363D3D613C613D613C613D61363D373D143D151560
%FFA8A87DA8A8FD1BFF7D7D7DA8CAA93615143D143D153D363D3D613C613D
%613C613D61363D373D143D153D84FFA8A87DA8A8FD14FFA1A87DA8CAFF85
%3D15FD043D613D6161676167618B616761673D613D3D153D84FFA8A87DA8
%A8FD1DFF7DA87DA8CFFF613D15FD043D613D6161676167618B616761673D
%613D3D1561A8FFA8A87DA8A8FD16FF7D7D7DA8A8FFA861143D373D3D613D
%6161676161616761613D613D3D1461A8FFA8A87D7DA8FD1FFF7D7D7DA8A8
%FF843D143D373D3D613D6161676161616761613D613D3D3685CAFFA8A87D
%7DA8FD18FF7D7D7DA8A8FFFF8B3D3D3D613D676167618B618B618B61613D
%6161AFFFFFA8A87DA8A8FD21FF7D7D7DA8A8FFAF853D3D3D613D67618B61
%8B618B618B61613D6185FFFFFFA8A87DA8A8FD1AFFFD057DFFFFFF84853D
%613C616167618B616160616185A8FFCFA8FD047DA8FD23FFFD057DFFFFFF
%84613D613C616167618B61616061618BA8FFCAA8FD047DA8FD1CFFA8FD04
%7DA8A8FFFFFFAFAF8BAF85AF8BAF8BAFAFFFFFFFA8A87D7D7DA8A8FD25FF
%A8FD047DA8CAFFFFFFA9AF8BAF85AF8BAFAFFD05FFA8A87D7D7DA8FD1FFF
%A8A8527D767D7DA8A8FD09FFCFFFA8A8FD057DA8FD28FFA87D52FD047DA8
%A8FD09FFCAFFA8A8FD057DFD24FFFD047D527D7DA87DFD05A87DA8FD067D
%A8FD2CFFA8FD047D527D7DA87DFD05A8FD077DA8A8FD1EFFA8FFA8FFA8FF
%A8FFFD047D527D527D527D527D527D527D527D7DA8A8FFA8FFA8FD23FFA8
%FFA8FFA8FFA8A87D7D527D527D527D527D527D527D527D527D7DA8A8FFA8
%FFA8FD1CFFCAFFA8FFFD06A8FD047D527D7D7D52FD047DA87DFD06A8FFA8
%FD23FFA8FFA8FFFD06A8FD047D527D7D7D52FD047DA8A1FD04A8CAA8FFA8
%FD1AFFA8FFFD06A87DA8FD067D527D527D52FD047DA87DA87DFD04A8FFA8
%FFA8FD1DFFA8FFA8FFFD06A87DA8FD067D527D527D76FD047DA87DA87DFD
%04A8FFA8FFA8FD18FFA8FFA8FFFD06A8A1A87DA87DA87DA87DA87DA87DA8
%7DFD04A8FFA8FFA8FD23FFA8FFA8FFFD04A8A1A87DA87DA87DA87DA87DA8
%7DA87DA87DFD04A8FFA8FFA8FD1CFFA8FFA8FFA8FFFD13A8FFA8FFA8FFA8
%FFA8FD23FFA8FFA8FFA8FFFD13A8FFA8FFA8FFA8FFA8FDFCFFFDFCFFFD14
%FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
15 Bn
%AI5_BeginGradient: (Unnamed gradient 137)
(Unnamed gradient 137) 0 5 Bd
[
<
2A2A2B2D2E2F30323334353637383A3B3D3E3F40424344454647484A4B4C4D
>
<
2122222324262728292A2B2C2D2E2F2F313233343536373838393A3B3C3D3E
>
<
2122232425262728292A2B2C2D2E2F303233343536373738393A3B3C3D3E3F
>
0
<
D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
>
<
D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3
>
<
D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3
>
4 %_Br
<
070707070707070707070707070707070707070808080808080808080909090909090909090A0A0A
0A0B0B0C0C0C0D0D0F0F0F1011111212131314151516171818191A1B1C1C1C1D1F20212223242627
292A
>
<
04040404040404040404040404040404040404050505050505050505060606060606060606070707
0808080909090A0A0A0A0C0B0C0C0D0E0D0F0E0F10101011121313141416171818191A1B1C1D1D1F
2021
>
<
04040404040404040404040404040404040404050505050505050505060606060606060606070707
0808080909090A0A0B0B0B0B0C0C0D0E0E0F0F10101112121314141516161718191A1B1B1C1D1E20
2021
>
0
<
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1
F1F0F0EFEFEFEEEEEDEDEDECEBEBEAEAE9E9E8E7E7E6E5E4E4E3E2E1E0E0DFDEDDDCDBDAD9D8D6D5
D4D3
>
<
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1
F0F0F0EFEFEFEEEEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D4
D3D2
>
<
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1
F0F0F0EFEFEFEEEEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9D8D7D6D4
D3D2
>
4 %_Br
<
1C1C1B1A191817161615141312121110100F0D0D0C0C0B0B0A0A0909090909080808080707070707
07
>
<
1514141312111010100F0E0D0D0D0C0B0B0A0A0A0909080807070606060606050505050404040404
04
>
<
171615141312121111100F0E0D0D0C0B0B0B0A0A0909080807070606060606050505050404040404
04
>
0
<
DFE0E1E2E3E4E5E6E6E7E8E9EAEAEBECECEDEEEEEFEFF0F0F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F5
F5
>
<
DFE0E1E2E3E4E5E6E6E7E8E9EAEAEBECECEDEEEEEFEFF0F0F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F5
F5
>
<
DFE0E1E2E3E4E5E6E6E7E8E9EAEAEBECECEDEEEEEFEFF0F0F1F1F2F2F3F3F3F4F4F4F4F5F5F5F5F5
F5
>
4 %_Br
<
80807F7E7D7C7B7A7978777675747372727170706F6E6D6C6B6B6A69686766656463626161605F5D
5C5B5A59585756555554535252514F4F4E4D4D4C4B4B4A48484747464545444443424140403F3F3E
3E3D3D3C3C3B3B39393838373736363535343434333332313130302F2F2F2E2E2D2D2D2B2C2C2A2B
2B2A2A2A292929292727272626262625252525242424242423232323222121212121202020202020
1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C
>
<
6C6C6B6A69686766666564636261605F5E5D5D5D5C5B5A595857565655555453515251504E4D4E4D
4B4A484947464646444344434141403F3E3E3D3C3C3B3B3A39393837383637353535343433333232
3130302F2F2E2E2D2D2C2C2B2B2A2A2B292A28282727282626252526242423232322222221212220
20212020201F1F1F1E1E1E1E1D1D1D1C1C1C1C1D1B1B1B1B1B1B1B1B1B1A1A1A1A1A191919191919
18181818181818171717171717171717181616161616161616161616161616151515151515151515
15151515151515151515151515151515
>
<
6C6B6A6A6968676666656463626261605F5E5E5D5D5C5B5A595857575655545453535150504F4E4D
4C4B4A494847474645444443424241403F3F3E3D3D3C3C3B3A3A3938383837373636353534343333
32313130302F2F2E2E2D2D2C2C2B2B2B2A2A29292929282828262626252524242423232322222221
21212121202020201F1F1F1F1E1E1E1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A
19191919191919181818181818181818181717171717171717171717171717171717171717171717
17171717171717171717171717171717
>
<
100F0E0D0D0C0B0A0909080707060605050404040303030202020202020101010101010100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
8485868788898A8B8C8D8E8F90919293939495969798999A9B9B9C9D9E9FA0A0A1A2A3A4A4A5A6A7
A8A8A9AAABABACADADAEAFB0B0B1B2B2B3B4B4B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C0C1
C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2
D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADADBDBDBDBDBDB
DCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDF
DFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDF
>
<
838485868788898A8B8C8D8E8F90919293949495969798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A5A6
A7A8A9A9AAABABACADAEAEAFB0B0B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBBBCBDBDBEBEBFBFC0C0
C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C8C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D0D1D1D1D2
D2D2D3D3D3D4D4D4D5D5D5D5D6D6D6D7D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDB
DCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDF
DFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDF
>
<
838485868788898A8B8C8D8E8F90919293949495969798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A5A6
A7A8A9A9AAABABACADAEAEAFB0B0B1B2B3B3B4B5B5B6B6B7B8B8B9BABABBBBBCBDBDBEBEBFBFC0C0
C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C8C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D0D1D1D1D2
D2D2D3D3D3D4D4D4D5D5D5D5D6D6D6D7D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDB
DCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDFDFDFDFDFDFDFDFDF
DFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDF
>
4 %_Br
[
0.301961 0.243137 0.247059 0 0.705882 0.701961 0.701961 2 50 100 %_BS
%_0.301961 0.243137 0.247059 0 0.705882 0.701961 0.701961 2 50 100 Bs
0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 87.3626 %_BS
%_0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 87.3626 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 78.5714 69.7802 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 78.5714 69.7802 Bs
0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 31.25 59.8901 %_BS
%_0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 31.25 59.8901 Bs
0.501961 0.423529 0.423529 0.062745 0.517647 0.513726 0.513726 2 25 0 %_BS
%_0.501961 0.423529 0.423529 0.062745 0.517647 0.513726 0.513726 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 142)
(Unnamed gradient 142) 0 2 Bd
[
<
00000001020304050506070809090A0B0B0C0E0F101112131415161718191A1B1C1C1D1F20212223
24252628292A2B2C2C2D2E2F30323334353637393A3B3C3D3E3F41424344454647494A4B4C4D4E4F
5051525354555758595B5C5E5F6061626364656668696A6B6C6D6E6E6F7071717273747576777878
797A7B7C7D7E7F808181828384858586878888898A8B8C8B8C8D8D8E8F8F909191929394949596
>
<
00000000010202030304040506060708090A0B0C0D0D0E0F0F1011121213141516171818191A1B1C
1B1C1D1E1E1F2021222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F41
42434445464748494A4B4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666766
6768696A6A6B6C6D6E6E6F7071727273747576777878797A7B7C7D7D7E7F808081828283848585
>
<
0000000001020203030404050606070809090A0B0C0D0E0F1010111213141515161718191A1B1B1C
1E1F20202122232425262728292A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414243
4445464748494A4B4C4E4F50515253545556575859595A5B5C5D5E5F60616162636465656667686A
6B6B6C6D6E6E6F707171727374747576777878797A7A7B7C7D7E7F7F8081828283848585868787
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101010202020203030303040405050606070708090A0A0B
0C0D0D0E0F101112131415161718191A1B1C1D1F20212223252628292A2C2D2E30313334363738
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B3
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959494939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A79787776757574737271706F6E6D6C6B6A69686766
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8A
898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
>
4 %_Br
[
0.588235 0.521569 0.529412 0.219608 0.4 0.388235 0.380392 2 50 100 %_BS
%_0.588235 0.521569 0.529412 0.219608 0.4 0.388235 0.380392 2 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 189)
(Unnamed gradient 189) 0 2 Bd
[
<
00000001020405050607
>
<
00000000010203030404
>
<
00000000010203030404
>
0
<
FFFEFDFCFBF9F8F7F6F5
>
<
FFFEFDFCFBF9F8F7F6F5
>
<
FFFEFDFCFBF9F8F7F6F5
>
4 %_Br
[
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 100 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 202)
(Unnamed gradient 202) 0 2 Bd
[
<
070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324252627292A2B2C2D2E2F
3031333435363738393B3C3D3E3F4041434344454647494A4B4C4D4E5051525354555658595B5C5D
5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F
>
<
040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B1C1D1E1F202021222324
25262728292A2B2C2D2E2F3031323334353738393A3B3C3D3E3F404142434445464748494A4C4D4E
4F505152535455565758595A5A5B5C5D5E5F60616262636465666768696A6A6B6C6D
>
<
040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C1D1E1F20212122232425
262829292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4C4D4E
4F505152535455565758595A5B5C5C5D5E5F6061616263646565666768696A6A6B6C
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00010101010101020202020203030304040505060607070809090A0B0C0D0D0E0F10
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7
A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483
>
4 %_Br
[
0.498039 0.427451 0.423529 0.062745 0.521569 0.513726 0.513726 2 50 100 %_BS
%_0.498039 0.427451 0.423529 0.062745 0.521569 0.513726 0.513726 2 50 100 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 0 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 206)
(Unnamed gradient 206) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0E101112131314151718191A1B1C1C1E
>
<
0000000001020203030404050606070809090A0B0C0C0D0E0F0F10111213131415
>
<
0000000001020203030404050606070808090A0B0B0C0D0E0F0F10111213131415
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDE
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0
>
4 %_Br
[
0.86 0 50 100 %_BS
%_0.86 0 50 100 Bs
1 0 50 21.4286 %_BS
%_1 0 50 21.4286 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 224)
(Unnamed gradient 224) 1 3 Bd
[
<
525253545555565758595A5B5C5C5D5E5F6061616263646566676769696A6B6C6D6E6E6F70717173
737475767878797A7B7C7D7D7E7F808182828384858586878889898A8A8B8C8C8D8D8E8F8F909091
929293939494959596969797989899999A9A9B9B9C9C9C9D9D9D9E9E9E9F9FA0A0A0A1A2A2A2A3A3
A3A4A4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001010202030305040606080708080A0A0B0B0B0D0D0E0E10101212131315141616171719
191B1B
>
<
0A0A0A0A0A0A090A090A0A0A090A0909090908080808080708070707080707060606060505050505
05050405050504050404030303030202010101010000010101000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000
>
0
<
9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473
7271706F6E6D6C6B6A696867666564636261605F5E5D5B5A595857565554535251504F4E4D4C4B4A
494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322
21201F
>
<
F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDE
DEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCB
CBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8
B8B7B7
>
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8
F8F8F8
>
4 %_Br
<
A4A4A5A6A7A7A8A8A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B3B3B3B4B5B5B6B8B8B9BABBBB
BCBDBEBEBFC0C1C1C2C2C3C4C5C5C6C6C7C7C8C8C9C9CACACBCCCC
>
<
1B1C1E2022242627292B2D2E3032343537393B3C3E4042434547494B4C4E50525355595B5D5E6062
6466686A6B6C6E707173747677797A7C7E7F818384858688898A8C
>
0
0
<
1F1F1F1E1E1E1E1E1D1D1D1D1C1C1C1C1C1B1B1B1B1B1A1A1A1A1919191919181818181817171717
171616161615151515151414141414131313131212121212111111
>
<
B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F
8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574
>
<
F8F8F8F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEF
EEEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8
>
4 %_Br
[
0.321569 0 0.039216 0 0.603922 0.945098 1 2 50 0 %_BS
%_0.321569 0 0.039216 0 0.603922 0.945098 1 2 50 0 Bs
0.643137 0.105882 0 0 0.121569 0.717647 0.972549 2 50 28.5714 %_BS
%_0.643137 0.105882 0 0 0.121569 0.717647 0.972549 2 50 28.5714 Bs
0.8 0.54902 0 0 0.066667 0.454902 0.909804 2 50 100 %_BS
%_0.8 0.54902 0 0 0.066667 0.454902 0.909804 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 235)
(Unnamed gradient 235) 0 3 Bd
[
<
A4A4A5A6A7A7A8A8AAAAABABACACAD
>
<
1B1C1E20222425272B2C2E30323335
>
0
0
<
1F1F1F1E1E1E1E1E1D1D1D1D1C1C1C
>
<
B7B6B5B4B3B2B1B0AEADACABAAA9A8
>
<
F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4
>
4 %_Br
<
525253545555565758595A5B5C5C5D5E5F6061616263646566676769696A6B6C6D6E6E6F70717173
737475767878797A7B7C7D7D7E7F808182828384858586878889898A8A8B8C8C8D8D8E8F8F909091
929293939494959596969797989899999A9A9B9B9C9C9C9D9D9D9E9E9E9F9FA0A0A0A1A2A2A2A3A3
A3A4A4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001010202030305040606080708080A0A0B0B0B0D0D0E0E10101212131315141616171719
191B1B
>
<
0A0A0A0A0A0A090A090A0A0A090A0909090908080808080708070707080707060606060505050505
05050405050504050404030303030202010101010000010101000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000
>
0
<
9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473
7271706F6E6D6C6B6A696867666564636261605F5E5D5B5A595857565554535251504F4E4D4C4B4A
494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322
21201F
>
<
F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDE
DEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCB
CBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C1C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B8
B8B7B7
>
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8
F8F8F8
>
4 %_Br
[
0.678431 0.207843 0 0 0.109804 0.658824 0.956863 2 50 100 %_BS
%_0.678431 0.207843 0 0 0.109804 0.658824 0.956863 2 50 100 Bs
0.643137 0.105882 0 0 0.121569 0.717647 0.972549 2 50 49.4506 %_BS
%_0.643137 0.105882 0 0 0.121569 0.717647 0.972549 2 50 49.4506 Bs
0.321569 0 0.039216 0 0.603922 0.945098 1 2 50 0 %_BS
%_0.321569 0 0.039216 0 0.603922 0.945098 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 244)
(Unnamed gradient 244) 0 2 Bd
[
<
070809090A0A0B0C0E0F1011121213141516171819191A1B1C1D1E1F20212122232526272829292A
2B2C2D
>
<
0405060607080809090A0B0C0D0E0F0F0F10101112131415151617161718191A1B1C1D1D1E1E1F20
212223
>
<
040506060708090A0B0C0D0E0F0F1011131314151617191A1B1B1C1E1F2020212223242526282829
2A2B2C
>
0
<
F5F4F3F2F1F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E3E2E1E0DFDEDDDCDBDBDAD9D8D7D6D5D4D4D3
D2D1D0
>
<
F5F4F3F2F1F0F0EFEEEDECEBEAE9E8E7E7E6E5E4E3E2E1E0DFDEDDDDDCDBDAD9D8D7D6D5D4D4D3D2
D1D0CF
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECD
CCCBCA
>
4 %_Br
[
0.176471 0.137255 0.172549 0 0.815686 0.811765 0.792157 2 50 100 %_BS
%_0.176471 0.137255 0.172549 0 0.815686 0.811765 0.792157 2 50 100 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 0 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 281)
(Unnamed gradient 281) 0 5 Bd
[
<
070809090A0B0C0D0F1011131415161718191A1B1C1C
>
<
040506060708090A0A0B0C0D0E0F1010111213141415
>
<
040506060708090A0B0B0C0E0F101112121314151617
>
0
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
4 %_Br
0.027451
0.015686
0.015686
0
0.960784
0.960784
0.960784
4 %_Br
0.027451
0.015686
0.015686
0
0.960784
0.960784
0.960784
4 %_Br
<
2A2927262524232221201F1D1C1C1B1A191817161514131211100F0D0C0B0A09090807
>
<
21201F1E1D1D1C1B1A19181817161514131110100F0E0D0D0C0B0A0A09080706060504
>
<
2120201F1E1D1C1B1B1A19181716151514121211100F0E0D0C0B0B0A09080706060504
>
0
<
D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
4 %_Br
[
0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 50 68.6813 %_BS
%_0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 50 68.6813 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 51.6483 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 51.6483 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 39.011 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 39.011 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 20.8791 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 20.8791 Bs
0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 12.0879 %_BS
%_0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 12.0879 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 284)
(Unnamed gradient 284) 1 3 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010101010202020203030303040404
04050505050606060607070707080808080909
>
<
A9ABABABACAEAFB0B1B1B2B4B5B6B7B7B9BABBBCBDBDBEBFC0C1C1C2C3C4C5C6C6C7C8C9CACBCBCC
CDCECFD0D0D1D2D3D4D4D5D6D7D8D9D9DADBDCDDDEDEDFE0E1E2E3E3E4E5E6E7E8E8E8E9EAEBEBEC
ECEDEEEFEFF0F0F1F2F3F3F3F4F5F5F6F6F7F7
>
<
4B4C4D4F50515354555758595B5C5D5F6162636566686A6B6C6E6F71737476787A7C7E7F81828586
88898B8D8F90929496989D9EA0A2A3A5A7A9ABACAEB1B3B5B6B8BABCBEC0C1C3C5C7C8CACCCED0D1
D3D5D7D9DADDDEE0E2E5E6E8EAEDEEF0F2F5F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000101
>
<
FFFFFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6F5F5
F5F5F4F4F4F4F3F3F3F3F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6
>
<
7A7978787776757473737271706F6E6E6D6C6B6A696968676665656463626160605F5E5D5C5B5B5A
5958575656555453525251504F4E4D4D4C4B4A4948484746454443434241403F3E3E3D3C3B3A3A39
38373635353433323130302F2E2D2C2B2B2A29
>
<
8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A5957565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A
393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
<
090A0B0C0D0E0F1112131415161718191A1B1C1D1D1E1F2021212223242426272829292A2B2C2C2D
2E2E2F3030313132333334353536363737383839
>
<
F7F7F8F8F9F9F9FAFAFAFAFAFBFBFBFBFCFCFCFDFDFDFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
F7F8FAFBFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
01010101010101010202020203030304040405050606070708090A0A0B0C0E0E0F10111213141416
161718191A1B1C1D1E1F2021222324252728292A
>
<
E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
>
<
2929282827272726262525252424232322222221212020201F1F1E1E1E1D1D1C1C1C1B1B1A1A1A19
1918181817171616151515141413131312121111
>
<
272726262525252424232323222221212020201F1F1E1E1E1D1D1C1C1C1B1B1A1A1A191918181817
1716161615151414131313121211111110100F0F
>
4 %_Br
[
0 0.662745 0.294118 0 1 0.478431 0.541176 2 50 0 %_BS
%_0 0.662745 0.294118 0 1 0.478431 0.541176 2 50 0 Bs
0.035294 0.968627 0.968627 0.003922 0.901961 0.160784 0.152941 2 50 42.8571 %_BS
%_0.035294 0.968627 0.968627 0.003922 0.901961 0.160784 0.152941 2 50 42.8571 Bs
0.223529 1 1 0.164706 0.666667 0.066667 0.058824 2 50 100 %_BS
%_0.223529 1 1 0.164706 0.666667 0.066667 0.058824 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 296)
(Unnamed gradient 296) 0 3 Bd
[
<
090A0B0C0D0F111213
>
<
F7F7F8F8F9F9FAFAFA
>
<
F7F8FAFBFEFFFFFFFF
>
<
010101010101010202
>
<
E6E5E4E3E2E0DFDEDD
>
<
292928282727262625
>
<
272726262525242423
>
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000001020202030302020303
0303040404040405050505060606060707070708080808090909
>
<
9D9E9FA0A0A2A3A4A6A7A8A9A9AAABACADAEB0B0B1B2B3B5B6B7B8B9BABBBCBDBEBFBFC0C1C2C3C4
C5C6C6C7C8C9CACBCCCCCDCECFD0D1D2D3D3D4D5D6D7D8D9D9DADBDCDDDEDFE0E0E1E2E3E4E5E6E6
E7E8E9E9EAEBECECEDEDEEEFF0F0F0F1F2F3F3F4F5F5F5F6F7F7
>
<
43444546494A4C4D4F50515254555758595B5C5E5F616263646667696A6B6D6E6F71737576787A7B
7D7F8183848688898B8D8F90929698999B9E9FA1A2A4A6A8A9ABADAFB1B3B5B7B9BBBDBFC0C2C4C6
C7C9CBCCCED0D1D4D5D7D9DBDDDEE0E3E5E6E8EBEDEEF0F3F5F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000101
>
<
FFFFFFFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAFAFAF9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6
F5F5F5F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDECEC
ECECEBEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6
>
<
8483828181807F7E7D7C7B7A7A79787776757474737271706F6E6D6D6C6B6A696867676665646362
6160605F5E5D5C5B5A5A59585756555453535251504F4E4D4D4C4B4A494847464645444342414040
3F3E3D3C3B3A3939383736353433333231302F2E2D2C2C2B2A29
>
<
91908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A
696867666564636261605F5E5D5B5A595857565554535251504F4E4D4C4B4A494847464544434241
403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
>
4 %_Br
[
0.07451 0.980392 1 0.007843 0.866667 0.145098 0.137255 2 50 100 %_BS
%_0.07451 0.980392 1 0.007843 0.866667 0.145098 0.137255 2 50 100 Bs
0.035294 0.968627 0.968627 0.003922 0.901961 0.160784 0.152941 2 50 71.978 %_BS
%_0.035294 0.968627 0.968627 0.003922 0.901961 0.160784 0.152941 2 50 71.978 Bs
0 0.615686 0.262745 0 1 0.517647 0.568627 2 50 0 %_BS
%_0 0.615686 0.262745 0 1 0.517647 0.568627 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 308)
(Unnamed gradient 308) 0 5 Bd
[
<
070809090A0B0C0D0F1011131415161718191A1B1C1C
>
<
040506060708090A0A0B0C0D0E0F1010111213141415
>
<
040506060708090A0B0B0C0E0F101112121314151617
>
0
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
<
F5F4F3F2F1F0EFEEEDECEBE9E8E7E6E5E4E3E2E1E0DF
>
4 %_Br
0.027451
0.015686
0.015686
0
0.960784
0.960784
0.960784
4 %_Br
0.027451
0.015686
0.015686
0
0.960784
0.960784
0.960784
4 %_Br
<
2A2927262524232221201F1D1C1C1B1A191817161514131211100F0D0C0B0A09090807
>
<
21201F1E1D1D1C1B1A19181817161514131110100F0E0D0D0C0B0A0A09080706060504
>
<
2120201F1E1D1C1B1B1A19181716151514121211100F0E0D0C0B0B0A09080706060504
>
0
<
D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
4 %_Br
[
0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 50 68.6813 %_BS
%_0.109804 0.082353 0.090196 0 0.87451 0.87451 0.87451 2 50 68.6813 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 51.6483 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 51.6483 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 39.011 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 39.011 Bs
0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 20.8791 %_BS
%_0.027451 0.015686 0.015686 0 0.960784 0.960784 0.960784 2 50 20.8791 Bs
0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 0 %_BS
%_0.164706 0.129412 0.129412 0 0.827451 0.823529 0.823529 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 325)
(Unnamed gradient 325) 1 3 Bd
[
<
3435363738383A3B3C3D3D3E404142434445464748494A4B4C4D4E4F50515253545557585A5B5C5D
5E5F61626364656667686A6A6B6D6E6F7071727475767778797A7B7C7D7F80818283848586878889
8A8B8C8D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001020102020304030405050607060707
08090809
>
<
9C9D9D9E9E9FA1A1A2A3A3A5A5A6A7A7A9A9AAACACADAEAEB0B0B1B3B3B4B4B6B7B7B9BABBBDBDBE
BFBFC1C1C2C4C4C5C5C7C8C8C9CBCBCCCCCECFCFD0D0D2D3D3D4D6D6D7D7D9DADADCDCDDDFDFE0E2
E2E3E3E5
>
0
<
D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAB
AAA9A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E
>
<
F1F0F0EFEEEEEDEDECEBEBEAE9E9E8E7E7E6E6E5E4E4E3E2E2E1E0E0DFDEDEDDDDDCDBDBDAD9D9D8
D7D7D6D6D5D4D4D3D2D2D1D0D0CFCFCECDCDCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C2C2C1C0C0BFBF
BEBDBDBC
>
<
8584848383828181807F7F7E7E7D7C7C7B7B7A797978777776767574747373727171706F6F6E6E6D
6C6C6B6B6A69696868676666656464636362616160605F5E5E5D5C5C5B5B5A595958585756565554
54535352
>
4 %_Br
<
8D8E8F8F919293939495969798999B9B9C9D9E9E9FA0A1A2A2A3A3A5A5A5A6A7A7A8A9A9A9AAAB
>
<
090909090A0A090B0A0B0B0B0D0C0E0E0D0E0E0E0F0F1010101111121212131214131314141515
>
<
E5E7E8EAECEEF0F1F4F6F8FAFCFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
000000000000000000000000000000000000000000000000000000000001010101010101010101
>
<
7E7D7C7C7B7A79797877767675747373727170706F6E6D6C6C6B6A696968676666656463636261
>
<
BCBCBBBBBABABAB9B9B8B8B8B7B7B6B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADAD
>
<
5251504F4E4D4C4B4A494847464544434241403F3D3C3B3A393837363534333231302F2E2D2C2B
>
4 %_Br
[
0.203922 0 0.611765 0 0.823529 0.945098 0.521569 2 50 0 %_BS
%_0.203922 0 0.611765 0 0.823529 0.945098 0.521569 2 50 0 Bs
0.552941 0.035294 0.898039 0 0.494118 0.737255 0.321569 2 50 51.0989 %_BS
%_0.552941 0.035294 0.898039 0 0.494118 0.737255 0.321569 2 50 51.0989 Bs
0.670588 0.082353 1 0.003922 0.380392 0.678431 0.168627 2 50 100 %_BS
%_0.670588 0.082353 1 0.003922 0.380392 0.678431 0.168627 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 329)
(Unnamed gradient 329) 0 3 Bd
[
<
47494A4B4C4D4E4F4F505152535455565758595A5B5C5D5E5F61626264656667686A6B6C6D6E6F6F
707272747575777878797B7C7D7E7F808182838485868788898A
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010001020203040304050506070708
>
<
E8E9E9E9E9EAEAEAEAEAEAEBEAEAE9E9EAE9E9E8E9E9E8E8E8E9EAEAEBEBEBEBEBEBEAEAEAE9EAE9
EAEAE9E9E7E7E7E6E6E6E6E8E7E8E8E8E8E7E8E6E6E6E4E4E2E2
>
0
<
C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A1A09F9E9D9C9B
9A999897969594939291908F8E8D8C8B8A898887868584838281
>
<
EAE9E9E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDCDBDADAD9D8D8D7D6D6D5D4D4D3D2D2D1D0D0
CFCECECDCCCCCBCACAC9C8C7C7C6C5C5C4C3C3C2C1C1C0BFBFBE
>
<
3A3A3B3B3C3C3C3D3D3E3E3E3F3F404040414142424243434444444545464646474748484849494A
4A4A4B4B4C4C4C4D4D4E4E4E4F4F505050515152525253535454
>
4 %_Br
<
34343435353535353637373737383838383839393939393A3B3B3B3B3C3C3C3C3C3D3D3D3D3D3F3F
3F3F404040404041414141424343434343444444444445454545454646464646474747
>
0
<
9C9D9E9FA0A1A2A3A4A5A6A7A8AAABACADAFB0B2B3B4B5B6B7B8B9B9BABCBDBEBFC1C2C3C3C4C6C7
C8C8CACBCCCDCFD0D1D2D3D4D5D6D7D7D9DADBDBDCDDDEDFE0E1E2E3E4E4E5E6E7E8E8
>
0
<
D2D2D2D1D1D1D1D1D0D0D0D0D0CFCFCFCFCFCECECECECECDCDCDCDCDCCCCCCCCCCCBCBCBCBCBCACA
CACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C7C6C6C6C6C6C5C5C5C5C5C4C4C4C4C4C3C3C3
>
<
F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEDED
EDEDEDEDEDEDEDEDECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEA
>
<
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605E5D
5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A
>
4 %_Br
[
0.541176 0.031373 0.886274 0 0.505882 0.745098 0.329412 2 50 96.7033 %_BS
%_0.541176 0.031373 0.886274 0 0.505882 0.745098 0.329412 2 50 96.7033 Bs
0.278431 0 0.909804 0 0.764706 0.917647 0.227451 2 50 11.5385 %_BS
%_0.278431 0 0.909804 0 0.764706 0.917647 0.227451 2 50 11.5385 Bs
0.203922 0 0.611765 0 0.823529 0.945098 0.521569 2 50 0 %_BS
%_0.203922 0 0.611765 0 0.823529 0.945098 0.521569 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8376)
(Unnamed gradient 8376) 1 2 Bd
[
<
7F7F7E7D7C7B7A797877767574737271706F6F6E6D6C6B6A6968676664636261605F5D5C5B595856
5554535251504E4D4C4B4A49474645444342413F3E3D3D3C3B3938373635343331302F2E2D2C2B2A
29272625242321201F1E1D1C1C1B1A191817161514131211100F0D0C0B0A09090807060505040302
01000000
>
<
6D6C6B6A6A69686766656463626261605F5E5D5C5B5A5A595857565554535251504F4E4D4C4A4948
47464544434241403F3E3D3C3B3A3938373636353433302F2E2D2C2B2A2928272625242322212020
1F1E1D1C1B1B1A1918171615141413121110100F0E0D0D0C0B0A0A09080706060504040303020201
00000000
>
<
6C6B6A6A6968676665656463626161605F5E5D5C5C5B5A595857565554535251504F4E4D4C4A4948
47464544434241403F3E3D3C3B3A393837363635343331302F2E2D2C2B2A29292826252423222121
201F1E1D1C1C1B1A1918171716151413121211100F0E0D0C0B0B0A09080706060504040303020201
00000000
>
<
100F0E0D0D0C0B0A0909080707060605050404030303020202020201010101010100000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000
>
<
85868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC
ADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB
FCFDFEFF
>
<
838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB
FCFDFEFF
>
<
838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFB
FCFDFEFF
>
4 %_Br
[
0.498039 0.427451 0.423529 0.062745 0.521569 0.513726 0.513726 2 50 0 %_BS
%_0.498039 0.427451 0.423529 0.062745 0.521569 0.513726 0.513726 2 50 0 Bs
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Linear Gradient 1)
(Linear Gradient 1) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient 2)
(Linear Gradient 2) 0 6 Bd
[
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
[
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 1)
(Radial Gradient 1) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
1 0 50 0 %_BS
%_1 0 50 0 Bs
0 0 50 100 %_BS
%_0 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 2)
(Radial Gradient 2) 1 6 Bd
[
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
[
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Offset Squares Pattern)
(Offset Squares Pattern) 0 0 55.0781 55.0801 [
%AI3_Tile
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 55.0801 L
55.0781 55.0801 L
55.0781 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 52.3262 m
26.1436 29.4307 L
3.03125 29.4307 L
3.03125 52.3262 L
26.1436 52.3262 L
f
25.0264 50.123 m
5.89063 50.123 L
5.89063 32.4961 L
25.0264 32.4961 L
25.0264 50.123 L
f
*U
*u
5.89063 50.123 m
25.0264 50.123 L
25.0264 32.4961 L
5.89063 32.4961 L
5.89063 50.123 L
n
10.0313 34.2578 m
24.1338 34.2578 L
24.1338 48.3613 L
10.0313 48.3613 L
10.0313 34.2578 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.4082 48.793 m
8.30566 48.793 L
8.30566 34.6895 L
22.4082 34.6895 L
22.4082 48.793 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa
 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
52.6943 24.7852 m
52.6943 1.67578 L
28.9355 1.67578 L
28.9355 24.7852 L
52.6943 24.7852 L
f
47.6777 22.582 m
30.0527 22.582 L
30.0527 4.95703 L
47.6777 4.95703 L
47.6777 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
30.0527 22.582 m
50.6982 22.582 L
50.6982 4.95703 L
30.0527 4.95703 L
30.0527 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.4199 21.252 m
32.2393 21.252 L
32.2393 6.50293 L
47.4199 6.50293 L
47.4199 21.252 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
27.5391 27.5391 m
27.5391 0 L
0 0 L
0 27.5391 L
27.5391 27.5391 L
f
25.4316 26.1445 m
2.75293 26.1445 L
2.75293 2.16992 L
25.4316 2.16992 L
25.4316 26.1445 L
f
*U
*u
4.95605 7.40039 m
22.582 7.40039 L
22.582 25.0273 L
4.95605 25.0273 L
4.95605 7.40039 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
22.582 5.67383 m
4.95605 5.67383 L
4.95605 25.0273 L
22.582 25.0273 L
22.582 5.67383 L
f
20.3887 21.3281 m
7.58105 21.3281 L
7.58105 10.0313 L
20.3887 10.0313 L
20.3887 21.3281 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.93555 8.73633 m
21.0371 8.73633 L
21.0371 22.8379 L
6.93555 22.8379 L
6.93555 8.73633 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa
 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
55.0781 55.0801 m
55.0781 27.5391 L
27.5391 27.5391 L
27.5391 55.0801 L
55.0781 55.0801 L
f
52.3252 50.9688 m
30.292 50.9688 L
30.292 28.9355 L
52.3252 28.9355 L
52.3252 50.9688 L
f
*U
*u
30.292 50.9688 m
52.3252 50.9688 L
52.3252 28.9355 L
30.292 28.9355 L
30.292 50.9688 L
n
32.4951 30.0527 m
50.1221 30.0527 L
50.1221 47.6777 L
32.4951 47.6777 L
32.4951 30.0527 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
50.1221 30.0527 m
32.4951 30.0527 L
32.4951 48.9727 L
50.1221 48.9727 L
50.1221 30.0527 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa
 0 0.901961 0 0 1 0.2 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.9063 33.749 m
49.0078 33.749 L
49.0078 47.8506 L
34.9063 47.8506 L
34.9063 33.749 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892.8833 8611.8447 m
-7801.0479 8611.8447 L
-7801.0479 8607.5654 L
-7892.8833 8607.5654 L
-7892.8833 8611.8447 L
n
0 O
0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
-7892.6631 8609.165 m
-7893 8609.2314 -7892.4814 8609.4209 -7892.8833 8609.2783 C
-7892.8379 8609.1602 -7892.7725 8609.0713 -7892.6631 8609.165 C
f
-7802.1675 8609.3311 m
-7803.2529 8610.0938 -7804.6816 8609.3232 -7805.8701 8609.8096 C
-7806.0098 8609.8418 -7805.8354 8609.3916 -7806.1484 8609.4922 C
-7807.3008 8610.085 -7809.1162 8609.7314 -7810.5195 8609.2744 C
-7810.4346 8609.1563 L
-7810.7021 8609.0713 -7811.0283 8609.4619 -7811.3115 8609.4072 C
-7811.3135 8609.3291 -7811.2207 8609.2959 -7811.2861 8609.1875 C
-7811.3574 8609.4248 -7811.7979 8609.2979 -7811.9189 8609.4736 C
-7812.0303 8609.3818 -7812.0195 8609.1943 -7812.1641 8609.0898 C
-7812.3262 8609.3594 L
-7812.7769 8609.999 -7813.4209 8609.3154 -7814.0361 8609.6455 C
-7814.0063 8609.583 -7813.9453 8609.5342 -7813.9941 8609.4736 C
-7814.9814 8609.8623 -7816.2168 8609.7891 -7817.3208 8609.9326 C
-7817.2769 8609.8379 -7817.2363 8609.665 -7817.3008 8609.5576 C
-7817.3555 8609.8408 -7817.6963 8609.9121 -7817.9922 8609.9678 C
-7818.1255 8609.6768 -7818.4995 8610.2334 -7818.8467 8610.0723 C
-7818.8169 8610.0088 L
-7819.0732 8610.3135 -7819.1973 8609.833 -7819.4053 8610.1982 C
-7819.5684 8609.9697 L
-7819.6807 8610.3799 -7819.9395 8609.7568 -7820.1514 8609.9658 C
-7820.1445 8610.0498 L
-7820.3442 8610.1494 -7820.4482 8609.9434 -7820.6338 8610.0127 C
-7820.6514 8609.9658 L
-7821.0854 8610.0723 -7821.3379 8609.8447 -7821.3271 8610.165 C
-7821.4795 8609.9082 -7820.9063 8610.0479 -7821.1455 8609.6738 C
-7822.5732 8610.0049 -7824.0459 8609.9395 -7825.4834 8609.9463 C
-7825.6465 8609.8174 -7825.7505 8609.7783 -7825.7871 8609.6563 C
-7825.9307 8609.7217 -7826.3281 8609.7158 -7826.4585 8609.8799 C
-7826.4102 8609.873 -7826.5513 8609.7158 -7826.6274 8609.7002 C
-7826.8887 8609.5791 -7826.9131 8610.0518 -7827.2002 8609.9082 C
-7827.0859 8609.8232 -7827.0469 8609.7197 -7827.0854 8609.6006 C
-7827.3301 8609.8506 -7827.6577 8609.8105 -7827.9473 8609.8916 C
-7827.9023 8609.8379 -7827.8325 8609.8057 -7827.8433 8609.7051 C
-7828.1602 8609.9883 -7828.4209 8609.6455 -7828.6982 8609.8242 C
-7828.5947 8609.6396 L
-7829.0415 8609.415 -7828.7266 8610.0264 -7829.1128 8609.8936 C
-7829.02 8609.835 -7829.0527 8609.7627 -7829.0361 8609.6875 C
-7829.3965 8610.0234 -7829.9795 8609.9121 -7830.3389 8610.0264 C
-7830.3174 8610.001 -7830.3232 8609.9502 Y
-7830.7148 8609.9922 -7831.1245 8609.8877 -7831.5552 8610.0342 C
-7831.7119 8609.9521 -7831.5039 8609.583 -7831.9185 8609.6514 C
-7831.9033 8610.0225 -7832.6221 8609.8037 -7832.3779 8610.2236 C
-7832.7319 8610.1631 -7833.2925 8610.0234 -7833.5283 8610.1494 C
-7833.3691 8610.0088 -7833.7007 8609.6963 -7833.4063 8609.665 C
-7833.6289 8609.4395 L
-7833.5957 8609.2881 -7833.3999 8609.4912 -7833.4707 8609.2998 C
-7833.6182 8609.3154 -7834.0479 8609.4619 -7834.1797 8609.4014 C
-7834.4531 8609.6289 -7834.7041 8610.0537 -7835.1465 8610.1006 C
-7834.9385 8609.9561 -7835.2646 8609.6914 -7835.1235 8609.6279 C
-7835.7407 8610.3379 L
-7835.8877 8610.3555 -7835.7725 8610.0459 -7835.9854 8610.1426 C
-7835.9746 8610.2402 -7836.0674 8610.3018 -7836.1318 8610.3818 C
-7836.1875 8610.3379 -7836.7441 8610.4736 -7836.8081 8610.1074 C
-7836.8735 8609.9658 -7836.5684 8610.0322 -7836.7314 8609.9014 C
-7837.0029 8609.9043 -7837.0151 8610.0303 -7837.2871 8610.0361 C
-7837.2925 8609.9873 L
-7837.4717 8609.9326 -7837.8213 8610.1426 -7837.6265 8610.3447 C
-7837.5015 8610.3555 -7837.6738 8610.125 -7837.4888 8610.2314 C
-7837.6152 8610.4434 -7837.9312 8610.5029 -7838.2031 8610.5059 C
-7838.1104 8610.4482 -7838.1216 8610.3506 -7838.0845 8610.2471 C
-7838.4497 8610.5342 -7838.8369 8610.625 -7839.2451 8610.7451 C
-7839.2515 8610.9189 -7839.0928 8610.4287 -7839.0327 8610.5205 C
-7839.5557 8610.2793 -7840.1128 8610.8623 -7840.5479 8610.5098 C
-7840.4766 8610.4795 -7840.5098 8610.7568 -7840.5146 8610.708 C
-7840.7666 8610.6865 -7840.7549 8610.4346 -7840.9189 8610.5273 C
-7840.9355 8610.3799 -7841.1255 8610.5752 -7841.2944 8610.6201 C
-7841.3818 8610.7266 -7841.3384 8610.5479 -7841.1914 8610.5322 C
-7841.4268 8610.6563 -7842.3691 8610.8838 -7842.9131 8610.6689 C
-7842.9023 8610.7666 -7843.2471 8611.0273 -7843.3721 8611.0166 C
-7843.3232 8610.7881 L
-7843.4375 8610.6514 -7843.7422 8610.8076 -7843.7632 8610.6123 C
-7844.0303 8610.8896 -7842.7344 8610.376 -7843.0957 8610.5898 C
-7843.1895 8610.3994 -7843.5991 8610.9541 -7843.5215 8610.6426 C
-7843.7725 8610.6514 -7844.0161 8610.9082 -7844.2559 8610.6943 C
-7844.1865 8610.7314 -7844.0522 8610.377 -7844.2549 8610.3936 C
-7844.6123 8610.4346 -7844.3564 8610.5029 -7844.6465 8610.5791 C
-7844.8281 8610.6729 L
-7844.8398 8610.8955 -7845.1475 8610.6426 -7845.0146 8610.8916 C
-7845.0586 8610.708 -7845.5337 8611.0049 -7845.4971 8610.6357 C
-7845.4473 8610.3447 L
-7845.6016 8610.3662 -7845.7002 8610.6514 -7845.8213 8610.7793 C
-7845.8418 8610.7529 -7845.8823 8610.6943 -7845.8745 8610.6475 C
-7845.8994 8611.0928 -7846.2432 8610.6104 -7846.4268 8610.9541 C
-7846.7505 8610.7998 -7847.2495 8610.9395 -7847.4023 8610.6631 C
-7847.6514 8610.7979 -7847.8784 8610.957 -7848.1621 8610.8623 C
-7848.1055 8610.8203 -7848.0283 8610.8076 -7848.0122 8610.7119 C
-7848.1904 8610.5811 -7848.2344 8610.6982 -7848.3975 8610.7705 C
-7848.3608 8610.7041 -7848.7539 8610.5098 -7848.9521 8610.3525 C
-7849.1992 8610.4854 -7849.1143 8610.7256 -7849.1392 8610.8721 C
-7849.3652 8610.4326 -7849.8379 8611.1553 -7850.1211 8610.7568 C
-7850.0352 8610.6963 -7849.7598 8610.541 -7849.9658 8610.4307 C
-7850.1919 8609.9922 -7850.4219 8610.7539 -7850.7861 8610.5439 C
-7850.6968 8610.9082 L
-7850.8594 8610.6826 -7851.2334 8611.1201 -7851.1963 8610.749 C
-7851.3184 8610.8799 -7851.6265 8610.6279 -7851.5859 8610.9834 C
-7852.1846 8610.6826 -7853.0425 8611.165 -7853.4102 8610.5273 C
-7853.4961 8610.5869 -7853.7104 8610.5264 -7853.6665 8610.709 C
-7853.5239 8610.9072 -7853.4673 8610.5674 -7853.4141 8610.7021 C
-7853.4912 8610.7129 -7853.5078 8610.8105 -7853.5161 8610.8594 C
-7853.7021 8610.7783 -7853.8486 8610.7529 -7853.6729 8610.457 C
-7854.0869 8610.2373 -7854.1001 8611.0615 -7854.6274 8610.9219 C
-7854.6035 8610.7754 -7854.6436 8610.7197 -7854.7979 8610.7432 C
-7855.0903 8610.9951 L
-7855.4312 8610.9365 -7855.2842 8610.6602 -7855.2925 8610.4111 C
-7855.4746 8610.4541 -7855.6973 8610.4424 -7855.7803 8610.6279 C
-7856.0015 8610.3154 L
-7855.8398 8610.541 -7856.1514 8610.4658 -7856.2368 8610.5264 C
-7856.1514 8610.4658 L
-7856.1846 8610.3594 -7856.3955 8610.4248 -7856.5024 8610.4561 C
-7856.4766 8610.6104 -7856.2617 8610.6729 -7856.1445 8610.7178 C
-7856.2373 8610.8271 -7856.3823 8610.8018 -7856.5059 8610.9307 C
-7856.4648 8610.6865 -7856.8027 8610.7568 -7856.9473 8610.7314 C
-7857.1133 8610.6787 -7857.1348 8610.9502 -7857.1831 8610.9424 C
-7857.1875 8610.8154 -7857.4541 8610.9209 -7857.3247 8610.7432 C
-7857.2681 8610.7021 -7857.1953 8610.8662 -7857.1016 8610.7539 C
-7857.2109 8610.6602 -7857.1982 8610.4395 -7857.4258 8610.6006 C
-7857.5967 8610.7217 -7857.3818 8611.083 -7857.7061 8610.9287 C
-7857.6211 8610.8682 -7857.6055 8610.7705 -7857.5391 8610.6826 C
-7857.8433 8610.5557 L
-7857.8564 8610.7783 L
-7857.8975 8610.7217 -7857.8691 8610.7021 -7857.8877 8610.6729 C
-7857.9785 8610.9072 -7858.3521 8610.7451 -7858.4209 8611.0088 C
-7858.5742 8611.0322 -7858.7441 8610.8545 -7858.8906 8610.8291 C
-7858.8623 8610.8096 L
-7859.0415 8610.6787 -7859.2793 8610.7646 -7859.4297 8610.915 C
-7859.4219 8610.8662 L
-7859.5195 8610.8486 -7859.7505 8610.8838 -7859.8735 8611.0146 C
-7860.1201 8610.8467 -7859.9561 8610.1738 -7860.2295 8610.4541 C
-7860.48 8610.4619 -7860.6221 8610.8623 -7860.5215 8611.0049 C
-7860.9717 8610.8545 -7861.4834 8611.2178 -7861.9009 8610.8721 C
-7861.9658 8610.9619 -7861.9248 8611.0186 -7862.0586 8611.0713 C
-7862.7197 8610.9834 -7863.4551 8611.335 -7863.9814 8610.8975 C
-7863.79 8610.8037 -7863.9688 8610.6738 -7863.9727 8610.5479 C
-7864.1309 8610.7471 -7864.1631 8610.3408 -7864.2197 8610.6826 C
-7864.2041 8610.8838 -7864.2197 8610.9814 -7864.0337 8611.0625 C
-7864.4282 8611.1709 -7865.0283 8611.1709 -7865.2471 8610.9834 C
-7865.1377 8611.0762 -7865.2227 8611.1377 -7865.3086 8611.1982 C
-7865.2803 8610.877 -7865.5713 8610.8291 -7865.7915 8610.9424 C
-7865.8223 8611.1377 L
-7865.9658 8610.9365 L
-7866.0503 8610.999 -7866.0591 8611.3467 -7866.2773 8611.1592 C
-7866.2891 8611.083 -7866.3018 8611.0059 -7866.3418 8610.9502 C
-7866.5693 8611.1104 -7866.8906 8611.3818 -7867.1377 8611.2158 C
-7867.3398 8610.9307 L
-7867.4453 8610.9619 -7867.6235 8611.1338 -7867.4375 8611.2158 C
-7867.8594 8611.0439 -7868.1309 8611.0225 -7868.2646 8610.7754 C
-7868.9912 8611.377 -7870.0459 8611.4014 -7870.8906 8611.3584 C
-7870.8652 8611.2119 L
-7871.0923 8611.0752 -7870.9834 8611.4678 -7871.1416 8611.3662 C
-7871.0684 8611.2266 -7871.3145 8611.0625 -7871.1362 8610.8916 C
-7871.4609 8610.7373 -7871.5547 8611.1455 -7871.7656 8611.2119 C
-7871.7979 8611.4043 -7871.5957 8611.0889 -7871.6367 8611.333 C
-7871.6729 8611.4014 -7872.0859 8611.1826 -7872.1362 8611.4736 C
-7872.2178 8611.3594 -7872.1543 8611.1455 -7872.1104 8611.0273 C
-7872.3086 8611.1689 L
-7872.5513 8610.8291 -7871.7559 8610.5615 -7872.0107 8610.1426 C
-7872.1934 8610.1875 L
-7872.3682 8609.8838 -7871.71 8609.8447 -7872.1689 8609.7402 C
-7872.3682 8609.8838 -7872.5381 8610.3057 -7872.3608 8610.4346 C
-7872.7754 8610.5146 -7872.5527 8611.1279 -7872.9985 8611.1035 C
-7873.1201 8610.9326 -7872.6416 8611.0625 -7872.7275 8610.8232 C
-7872.9375 8610.5889 -7873.1484 8610.9541 -7873.3354 8610.8721 C
-7873.1279 8610.9814 -7873.3032 8611.2754 -7873.4375 8611.3291 C
-7873.6641 8611.1914 -7873.29 8611.0537 -7873.6113 8611.0234 C
-7873.6641 8611.1914 -7873.9595 8611.3174 -7873.7041 8611.4346 C
-7873.8203 8611.8154 -7874.0381 8611.3291 -7874.2129 8611.624 C
-7874.3174 8611.3555 -7873.8823 8611.0049 -7874.2354 8610.8711 C
-7874.1792 8611.1289 -7874.6704 8611.2217 -7874.4839 8611.6035 C
-7874.6221 8611.5303 -7874.6367 8611.3271 -7874.5361 8611.1689 C
-7874.7334 8611.0098 -7875.0151 8611.6396 -7875.0801 8611.1279 C
-7875.1479 8611.3916 L
-7875.21 8611.3057 -7875.2983 8611.2402 -7875.3994 8611.0986 C
-7875.5732 8611.0938 -7875.96 8611.4561 -7875.9443 8611.0576 C
-7876 8611.0986 -7876.3975 8611.0811 -7876.2441 8611.3555 C
-7875.9971 8611.5234 -7875.96 8611.1553 -7875.8223 8611.5273 C
-7875.9971 8611.2236 -7876.1787 8611.5674 -7876.3213 8611.6689 C
-7876.3447 8611.5146 L
-7876.4297 8611.5752 -7876.6255 8611.541 -7876.6787 8611.708 C
-7876.6133 8611.6201 -7876.6475 8611.5146 -7876.7148 8611.4775 C
-7876.8042 8611.7119 L
-7877.1494 8611.8291 -7876.8857 8611.2998 -7877.2217 8611.3682 C
-7876.9663 8611.1865 L
-7877.0225 8611.2256 -7877.1367 8611.0059 -7877.2979 8611.0791 C
-7877.3604 8611.293 -7877.4775 8611.5498 -7877.5313 8611.7158 C
-7877.7207 8611.8096 -7877.6162 8611.4746 -7877.8027 8611.6943 C
-7877.5586 8611.4365 L
-7877.5215 8611.3662 -7877.7231 8611.083 -7877.9761 8611.0889 C
-7878.1377 8611.1631 -7878.3887 8611.4717 -7878.1338 8611.5889 C
-7878.2607 8611.5928 -7878.4385 8611.4619 -7878.3379 8611.3057 C
-7878.6255 8611.3799 -7878.2998 8611.5361 -7878.5479 8611.6689 C
-7878.6494 8611.5264 -7878.9658 8611.3232 -7879.1563 8611.1162 C
-7878.8975 8610.7578 L
-7879.0693 8610.7539 L
-7878.8467 8610.4678 -7879.1826 8610.5361 -7879.0566 8610.2334 C
-7879.1743 8610.1865 -7879.3169 8610.2891 -7879.4307 8610.3682 C
-7879.0864 8610.8525 -7879.8159 8611.0303 -7879.7158 8611.4717 C
-7880.1875 8611.5928 -7880.0107 8610.3975 -7880.5024 8611.0889 C
-7880.4219 8611.2041 -7880.6533 8611.54 -7880.3564 8611.4121 C
-7880.6494 8611.3643 -7880.5557 8611.8555 -7880.9014 8611.6729 C
-7880.6455 8611.4912 -7881.1763 8611.2256 -7880.8066 8610.9619 C
-7880.8311 8611.1074 -7880.6001 8611.0723 -7880.5435 8611.0322 C
-7880.6641 8610.8623 -7880.5186 8610.5869 -7880.8184 8610.5869 C
-7881.0015 8610.6289 -7881.2524 8610.6377 -7881.2158 8610.8682 C
-7881.2085 8611.1211 -7880.9365 8610.8408 -7881.0537 8611.0967 C
-7881.4185 8611.1846 -7881.4795 8610.7998 -7881.6304 8611.249 C
-7881.3999 8611.2129 -7881.3423 8611.4736 -7881.3467 8611.6475 C
-7881.6143 8611.7529 L
-7881.5625 8611.585 L
-7881.9922 8611.4639 -7881.6895 8611.8896 -7882.1055 8611.8447 C
-7882.3008 8611.5127 L
-7882.2017 8611.2266 -7881.6953 8611.6396 -7881.7695 8611.1738 C
-7882.04 8611.1553 -7882.1299 8611.3916 -7882.3848 8611.2715 C
-7882.3281 8611.2314 -7882.2505 8611.2197 -7882.1943 8611.1787 C
-7882.2915 8611.1631 -7882.3877 8610.5459 -7882.7734 8610.9072 C
-7882.9727 8611.0479 -7882.8262 8611.0723 -7882.8311 8611.2471 C
-7883.2656 8611.2998 -7883.3955 8611.4775 -7883.6753 8611.5049 C
-7883.6177 8611.165 -7884.1699 8611.4717 -7883.8608 8611.124 C
-7883.7188 8611.3232 -7883.0903 8611.3037 -7882.9365 8610.9795 C
-7883.0947 8610.5762 -7882.5952 8611.0361 -7882.5024 8610.6279 C
-7882.8506 8610.6182 -7882.8335 8610.2217 -7882.8896 8609.9619 C
-7882.9863 8609.9434 -7883.0801 8610.0537 -7883.1377 8610.0938 C
-7883.1787 8610.3379 -7883.0522 8610.335 -7883.0449 8610.5869 C
-7883.4336 8610.5205 -7883.8081 8610.6563 -7884.0225 8610.8955 C
-7884.1523 8610.7744 -7884.1113 8610.5303 -7883.9575 8610.5059 C
-7884.4199 8610.5791 -7884.9141 8610.5459 -7885.3535 8610.4717 C
-7885.0693 8610.8711 -7885.8433 8610.5654 -7885.6494 8610.8975 C
-7885.4141 8610.9873 -7885.2119 8611.2715 -7885.3418 8611.4502 C
-7885.4888 8611.4248 -7885.3369 8611.2754 -7885.3984 8611.1904 C
-7885.5859 8611.4082 -7885.6895 8610.8408 -7885.8735 8611.1846 C
-7885.4512 8611.0557 -7885.7915 8610.6982 -7885.7139 8610.3857 C
-7886.0186 8610.5615 -7885.7007 8610.1631 -7886.0024 8610.1631 C
-7886.3057 8610.3369 -7886.6787 8610.4736 -7887.0161 8610.541 C
-7887.4399 8610.2451 -7888.0898 8610.5361 -7888.4683 8610.5479 C
-7888.6665 8610.3896 -7888.5322 8610.0361 -7888.7471 8609.9746 C
-7888.9995 8609.9814 -7888.5601 8610.3555 -7888.9336 8610.1943 C
-7888.8975 8610.124 L
-7889.0107 8610.2051 -7889.5825 8609.8838 -7889.6929 8610.3916 C
-7889.5776 8610.0088 L
-7889.6475 8609.9736 -7889.7119 8610.0615 -7889.7695 8610.1025 C
-7889.7725 8609.9775 -7889.8535 8609.8643 -7889.7402 8609.7822 C
-7889.9707 8609.5186 -7890.2241 8609.8242 -7890.4746 8609.835 C
-7890.3135 8610.0615 L
-7890.7422 8610.2393 -7891.0293 8610.0146 -7891.4443 8610.0938 C
-7891.4316 8609.8721 L
-7891.6787 8610.0049 L
-7891.6182 8609.7891 -7891.8447 8609.6514 -7891.9751 8609.8311 C
-7891.3335 8609.2881 L
-7891.1553 8609.4189 -7891.5283 8609.5557 -7891.4165 8609.7744 C
-7891.3213 8609.9658 -7890.9375 8609.9043 -7890.8755 8609.6914 C
-7891.0225 8609.667 -7891.0293 8609.7158 -7891.1436 8609.7959 C
-7891.1919 8609.4873 -7890.9688 8609.499 -7890.8584 8609.293 C
-7890.9355 8609.3057 -7891.0449 8609.2119 -7891.0615 8609.3096 C
-7890.9102 8609.1592 -7890.7578 8609.1357 -7890.5059 8609.1279 C
-7890.6763 8609.249 -7890.4131 8609.3193 -7890.4775 8609.4072 C
-7890.4575 8609.1357 -7890.2168 8609.0518 -7889.9053 8609.1279 C
-7889.6831 8609.4424 -7889.3208 8608.9258 -7888.96 8609.0127 C
-7889.1064 8609.2881 -7889.2935 8609.5088 -7889.5127 8609.6201 C
-7889.2861 8609.7578 -7889.2607 8609.6123 -7889.0337 8609.751 C
-7888.9238 8609.5459 -7888.8457 8609.2314 -7888.5503 8609.1064 C
-7888.5342 8609.3096 L
-7888.2666 8609.2051 -7888.2666 8608.9043 -7887.9258 8608.9619 C
-7887.3418 8609.0615 -7886.7407 8609.0615 -7886.2949 8609.0869 C
-7886.2783 8609.2891 L
-7886.0303 8608.8555 -7885.4521 8609.1289 -7885.1182 8608.9365 C
-7884.5503 8609.1318 -7883.8848 8608.7432 -7883.5938 8609.0928 C
-7882.5913 8608.9365 -7881.7148 8608.7842 -7880.6768 8608.8584 C
-7880.8516 8609.1533 L
-7880.6655 8608.9365 -7880.7305 8609.3232 -7880.5479 8609.2793 C
-7880.7578 8609.0439 -7880.2949 8608.9736 -7880.1665 8608.793 C
-7879.7041 8609.0225 -7879.1104 8608.7715 -7878.7007 8608.5654 C
-7878.6846 8608.7686 L
-7878.2705 8608.3877 -7877.7759 8608.7217 -7877.2598 8608.7842 C
-7877.2007 8608.8682 -7877.1074 8609.0586 -7876.9536 8609.0361 C
-7876.6738 8608.708 -7876.5273 8608.7314 -7876.1167 8608.5264 C
-7875.8169 8608.5264 -7875.3301 8608.6074 -7875.0254 8608.7354 C
-7873.8975 8608.2744 -7872.7456 8608.5693 -7871.5732 8608.292 C
-7871.4888 8608.5303 L
-7870.3521 8608.0205 -7868.9541 8608.4834 -7867.9839 8608.2217 C
-7868.0776 8608.6289 L
-7867.7734 8608.7539 -7867.3843 8608.5225 -7867.4619 8608.2334 C
-7867.1567 8608.3584 -7866.7007 8608.0361 -7866.5068 8608.3711 C
-7866.1953 8608.4463 -7866.1255 8608.1826 -7865.8662 8608.1279 C
-7865.2422 8608.2822 -7865.0107 8608.2471 -7864.4224 8608.1709 C
-7864.5684 8608.1455 L
-7864.6328 8608.2354 -7864.6387 8608.4082 -7864.4922 8608.4346 C
-7864.2725 8608.3203 -7863.6846 8608.5439 -7863.9033 8608.0576 C
-7863.2754 8608.3379 -7862.4385 8607.8291 -7861.8271 8608.208 C
-7861.8789 8608.0752 -7861.7246 8608.0498 -7861.6602 8607.96 C
-7861.1089 8607.9541 -7860.5293 8608.2256 -7860.0898 8607.999 C
-7860.0024 8608.0654 -7860.2295 8608.2256 -7860.0049 8608.2393 C
-7859.8721 8608.1875 -7860.0024 8608.0654 -7859.8384 8607.9912 C
-7858.9453 8607.7432 -7858.0303 8608.2471 -7857.2188 8608.1826 C
-7855.7754 8607.9258 -7854.2695 8608.0557 -7852.8867 8608.0127 C
-7852.9023 8608.1104 L
-7852.4395 8607.7373 -7851.8159 8608.4922 -7851.4463 8607.9307 C
-7851.3369 8608.0234 -7851.0283 8607.9746 -7851.1094 8608.1631 C
-7850.7407 8607.8994 -7850.0771 8608.4111 -7849.5439 8608.0762 C
-7849.5928 8608.0674 -7849.6211 8608.0869 -7849.6777 8608.1289 C
-7849.1392 8608.3447 -7848.6641 8608.0498 -7848.0957 8608.2451 C
-7848.1533 8608.2871 -7848.2583 8608.3174 -7848.2754 8608.415 C
-7848.0557 8608.6025 -7847.7549 8608.0029 -7847.6348 8608.4736 C
-7847.5088 8608.4697 -7847.5449 8608.2373 -7847.6221 8608.251 C
-7846.3779 8608.4346 -7845.0498 8608.1338 -7843.7549 8608.0264 C
-7842.8271 8608.3076 -7843.6982 8608.8193 -7842.9663 8608.4678 C
-7842.9063 8608.5586 -7842.9229 8608.2881 -7842.9131 8608.3857 C
-7842.6299 8608.2539 -7842.4717 8608.9111 -7842.2754 8608.665 C
-7842.3564 8608.376 -7842.1445 8608.5029 -7842.1387 8608.3271 C
-7841.5713 8608.5146 -7841.4575 8608.7754 -7841.0098 8608.5557 C
-7841.0435 8608.708 L
-7840.5186 8608.2783 -7839.9102 8608.5088 -7839.4673 8608.0127 C
-7836.5728 8607.9219 -7833.7983 8607.6475 -7830.9761 8607.5898 C
-7828.1865 8607.6846 -7825.4551 8607.4619 -7822.6221 8607.7256 C
-7821.9585 8608.125 -7821.9087 8608.1143 -7821.1797 8607.9521 C
-7821.2095 8608.0166 -7821.2549 8608.0322 -7821.2061 8608.0928 C
-7821.1699 8607.7646 -7820.6929 8608.0615 -7820.6235 8607.749 C
-7819.5762 8607.8096 -7818.6113 8607.7197 -7817.5337 8607.7178 C
-7817.7041 8607.7529 -7817.7896 8608.0205 -7817.5869 8607.999 C
-7817.3755 8607.7891 L
-7817.3408 8607.8818 L
-7817.2021 8607.833 -7817.0513 8607.6709 -7817.1943 8607.5654 C
-7814.4873 8607.2822 -7811.8242 8607.9395 -7809.1729 8607.8594 C
-7808.5439 8607.9961 -7807.6475 8607.8711 -7806.9629 8607.8037 C
-7804.9355 8608.2402 -7803.1084 8608.5938 -7801.0479 8608.2881 C
-7801.3174 8609.1357 -7802.1675 8609.3311 V
f
-7892.2578 8609.1318 m
-7892.1855 8609.2959 -7891.9497 8609.3857 -7892.1377 8609.6035 C
-7892.1611 8609.4502 -7892.2822 8609.2783 -7892.2578 8609.1318 C
f
-7885.9619 8610.8193 m
-7885.9536 8610.7705 -7885.8721 8610.8857 -7885.8521 8610.9121 C
-7885.9297 8610.9248 -7886.0024 8611.0625 -7886.0645 8610.9775 C
-7885.9854 8610.9658 -7885.9976 8610.8877 -7885.9619 8610.8193 C
f
-7884.3521 8610.917 m
-7884.3765 8611.0625 -7884.7207 8611.1787 -7884.9238 8611.1963 C
-7884.3521 8610.917 L
f
-7882.8521 8611.5186 m
-7882.7227 8611.6416 -7882.7583 8611.709 -7882.9326 8611.7051 C
-7882.9453 8611.6279 -7882.8877 8611.5889 -7882.8521 8611.5186 C
f
-7882.7456 8611.1865 m
-7882.6211 8611.1826 -7882.5591 8611.2686 -7882.4985 8611.3525 C
-7882.5029 8611.2266 -7882.7871 8611.4307 -7882.7456 8611.1865 C
f
-7879.4893 8611.6104 m
-7879.4111 8611.5986 -7879.2417 8611.4775 -7879.1689 8611.6396 C
-7879.2505 8611.5264 -7879.5498 8611.8242 -7879.4893 8611.6104 C
f
-7877.9761 8611.3896 m
-7877.9272 8611.3994 -7877.9072 8611.4258 -7877.8506 8611.3857 C
-7877.7607 8611.4521 -7877.8555 8611.5586 -7877.9312 8611.5723 C
-7877.9761 8611.3896 L
f
-7850.4287 8610.8037 m
-7850.5923 8610.876 L
-7850.5684 8610.7314 L
-7850.4287 8610.8037 L
f
-7838.3574 8610.7959 m
-7838.1943 8610.7041 -7838.2441 8610.9326 -7838.2168 8610.9541 C
-7838.3643 8610.9697 -7838.1621 8610.7744 -7838.3574 8610.7959 C
f
-7831.8486 8610.0674 m
-7831.8984 8610.0713 L
-7831.8818 8609.7715 L
-7831.8486 8610.0674 L
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -
(ush Tool/ Charcoal/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -
(1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
(Black)
Pc
0 0.992157 1 0 1 0 0 Xa
(RGB Red)
Pc
0.062745 0 0.964706 0 1 1 0 Xa
(RGB Yellow)
Pc
0.627451 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.517647 0 0.12549 0 0 1 1 Xa
(RGB Cyan)
Pc
0.882353 0.768627 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.270588 0.815686 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.87451 0.52549 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 1)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 1)
Pc
Bb
2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 2)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 2)
Pc
(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Offset Squares Pattern)
Pc
0 g
(K=100)
Pc
0.1 g
(K=90)
Pc
0.2 g
(K=80)
Pc
0.3 g
(K=70)
Pc
0.4 g
(K=60)
Pc
0.5 g
(K=50)
Pc
0.6 g
(K=40)
Pc
0.7 g
(K=30)
Pc
0.8 g
(K=20)
Pc
0.9 g
(K=10)
Pc
0.95 g
(R=241 G=241  B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
519.7422 185.9189 m
73.4067 185.9189 L
73.4067 628.1206 L
519.7422 628.1206 L
519.7422 185.9189 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d1 XR
261.3159 191.6143 m
98.6499 191.6143 L
98.6499 222.998 L
261.3159 222.998 L
261.3159 191.6143 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8376) 3229.9697 -5386.6191 -180 35.1711 2.1022 0 0 0.3494 -15312.5664 3515.2063 Bg
-73.9368 0.000001 0.000006 12.2888 177.1411 205.6045 Bm
f
0 BB
269.0005 295.7393 m
269.0005 246.1787 228.8237 206.001 179.2612 206.001 c
129.6997 206.001 89.522 246.1787 89.522 295.7393 c
89.522 345.3008 129.6997 385.4785 179.2612 385.4785 c
228.8237 385.4785 269.0005 345.3008 269.0005 295.7393 c
Bb
1 (Unnamed gradient 137) 175.5313 208.1035 87.5633 181.9627 1 0 0 1 0 0 Bg
7.73624 181.7981 187.3609 -7.97296 81.8511 212.0898 Xm
343.3376 8068.2788 187.3609 -7.97296 -261.4863 -7856.1885 Bc
4.63324 108.8791 187.3609 -7.97296 81.8511 212.0898 Bm
0.765122 17.98 187.3609 -7.97296 86.4844 320.9688 Bm
1.36022 31.9645 187.3609 -7.97296 87.2495 338.9492 Bm
0.97766 22.9746 187.3609 -7.97296 88.6099 370.9131 Bm
343.3376 8068.2788 187.3609 -7.97296 89.5874 393.8877 Bc
f
0 BB
259.916 295.7393 m
259.916 251.1953 223.8057 215.0859 179.2612 215.0859 c
134.7173 215.0859 98.6069 251.1953 98.6069 295.7393 c
98.6069 340.2842 134.7173 376.3936 179.2612 376.3936 c
223.8057 376.3936 259.916 340.2842 259.916 295.7393 c
Bb
1 (Unnamed gradient 142) 180.9932 211.9678 91.1842 168.7643 1 0 0 1 0 0 Bg
-3.4878 168.7282 167.0801 3.45374 97.4531 210.2412 Xm
-166.8788 8073.0356 167.0801 3.45374 264.332 -7862.7939 Bc
-3.4878 168.7282 167.0801 3.45374 97.4531 210.2412 Bm
-166.8788 8073.0356 167.0801 3.45374 93.9653 378.9697 Bc
f
0 BB
253.7119 295.7393 m
253.7119 254.6221 220.3789 221.29 179.2612 221.29 c
138.145 221.29 104.812 254.6221 104.812 295.7393 c
104.812 336.8574 138.145 370.1895 179.2612 370.1895 c
220.3789 370.1895 253.7119 336.8574 253.7119 295.7393 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 224) 182.25 221.7871 89.2535 136.0677 1 0 0 1 0 0 Bg
1.77277 136.0561 136.0561 -1.77277 182.25 221.7871 Bm
f
0 BB
236.4277 319.2246 m
236.4277 293.5254 210.833 272.6904 179.2612 272.6904 c
147.6904 272.6904 122.0957 293.5254 122.0957 319.2246 c
122.0957 344.9238 147.6904 365.7568 179.2612 365.7568 c
210.833 365.7568 236.4277 344.9238 236.4277 319.2246 c
Bb
1 (Unnamed gradient 235) 179.2617 356.9004 -90 74.8606 1 0 0 1 0 0 Bg
-0.000003 -74.8606 -118.332 0.000005 238.4277 356.9004 Xm
-0.000353 -8084.1187 -118.332 0.000005 238.4282 8441.0186 Bc
-0.000002 -37.019 -118.332 0.000005 238.4277 356.9004 Bm
-0.000002 -37.8416 -118.332 0.000005 238.4277 319.8818 Bm
-0.000353 -8084.1187 -118.332 0.000005 238.4277 282.04 Bc
f
0 BB
0 Ap
0.8 0.54902 0 0 0.066667 0.454902 0.909804 Xa
0 XR
195.1152 246.3115 m
192.2329 246.3115 L
166.2896 246.3115 L
163.4063 246.3115 L
163.4063 249.1943 L
163.4063 279.8857 L
132.7173 279.8857 L
129.835 279.8857 L
129.835 282.7686 L
129.833 308.71 L
129.833 311.5938 L
132.7163 311.5938 L
163.4063 311.5938 L
163.4063 342.2842 L
163.4063 345.167 L
166.2896 345.167 L
192.2329 345.167 L
195.1152 345.167 L
195.1152 342.2842 L
195.1152 311.5938 L
225.8062 311.5938 L
228.6899 311.5938 L
228.6899 308.71 L
228.6899 282.7686 L
228.6899 279.8857 L
225.8062 279.8857 L
195.1152 279.8857 L
195.1152 249.1943 L
195.1152 246.3115 L
195.1152 246.3115 L
f
0.772549 0.47451 0 0 0.078431 0.505882 0.921569 Xa
228.6899 308.71 m
228.6899 311.5938 L
225.8062 311.5938 L
195.1152 311.5938 L
195.1152 342.2842 L
195.1152 345.167 L
192.2329 345.167 L
166.2896 345.167 L
163.4063 345.167 L
163.4063 342.2842 L
163.4063 311.5938 L
132.7163 311.5938 L
129.833 311.5938 L
129.833 308.71 L
129.833 295.835 L
134.4653 289.3643 140.958 283.8857 148.7168 279.8857 C
163.4063 279.8857 L
163.4063 274.5059 L
168.4404 273.3242 173.7598 272.6904 179.2612 272.6904 c
184.7617 272.6904 190.0815 273.3242 195.1152 274.5059 C
195.1152 279.8857 L
209.8057 279.8857 L
217.5649 283.8867 224.0581 289.3652 228.6899 295.8369 C
228.6899 308.71 L
f
225.8062 308.7119 m
192.2339 308.7119 L
192.2339 342.2842 L
166.2896 342.2842 L
166.2896 308.71 L
132.7163 308.71 L
132.7173 282.7686 L
166.2896 282.7686 L
166.2896 249.1943 L
192.2339 249.1943 L
192.2339 282.7686 L
225.8062 282.7686 L
225.8062 308.7119 L
Bb
1 (Unnamed gradient 244) 183.6606 235.3184 94.1636 133.059 1 0 0 1 0 0 Bg
-9.66069 132.7079 98.4662 7.16801 134.4268 231.7344 Xm
-585.6604 8045.1548 98.4662 7.16801 720.0869 -7813.4209 Bc
-9.66069 132.7079 98.4662 7.16801 134.4268 231.7344 Bm
-585.6604 8045.1548 98.4662 7.16801 124.7661 364.4424 Bc
f
0 BB
225.8062 308.7119 m
192.2339 308.7119 L
192.2339 342.2842 L
166.2896 342.2842 L
166.2896 308.71 L
132.7163 308.71 L
132.7163 292.2041 L
135.8325 288.6533 139.5449 285.4775 143.7354 282.7686 C
166.2896 282.7686 L
166.2896 273.8945 L
170.4565 273.1084 174.7993 272.6904 179.2612 272.6904 c
183.7236 272.6904 188.0664 273.1084 192.2339 273.8945 C
192.2339 282.7686 L
214.7881 282.7686 L
218.978 285.4775 222.6914 288.6543 225.8062 292.2041 C
225.8062 308.7119 L
Bb
1 (Unnamed gradient 202) 184.1567 281.6006 104.5536 109.2657 1 0 0 1 0 0 Bg
-27.4569 105.7597 95.0985 24.6891 136.6074 269.2559 Xm
-2032.8112 7830.0723 95.0985 24.6891 2169.4189 -7560.8164 Bc
-27.4569 105.7597 95.0985 24.6891 136.6074 269.2559 Bm
-2032.8112 7830.0723 95.0985 24.6891 109.1504 375.0156 Bc
f
0 BB
*u
1 D
0 g
192.2339 342.2842 m
166.2896 342.2842 L
166.2896 308.71 L
132.7163 308.71 L
132.7173 282.7686 L
135.2598 282.7686 L
135.2588 306.1689 L
168.832 306.1689 L
168.832 339.7422 L
192.2339 339.7422 L
192.2339 342.2842 L
f
0 g
192.2339 308.7119 m
192.2339 306.1689 L
225.8062 306.1689 L
225.8062 308.7119 L
192.2339 308.7119 L
f
166.2842 249.1982 m
168.8267 249.1982 L
168.8267 282.7705 L
166.2842 282.7705 L
166.2842 249.1982 L
Bb
1 (Unnamed gradient 189) 179.5767 257.0752 90.4658 86.6712 1 0 0 1 0 0 Bg
-0.704608 86.6683 97.2935 0.79099 130.9292 256.6797 Xm
-65.7151 8083.0991 97.2935 0.79099 196.6445 -7826.4189 Bc
-0.704608 86.6683 97.2935 0.79099 130.9292 256.6797 Bm
-65.7151 8083.0991 97.2935 0.79099 130.2246 343.3477 Bc
f
0 BB
*U
1 Ap
0 D
1 XR
261.3154 420.1304 m
98.6499 420.1304 L
98.6499 451.5146 L
261.3154 451.5146 L
261.3154 420.1304 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8376) 3229.9697 -4732.5938 -180 35.172 2.1022 0 0 0.3494 -15312.5664 3515.2063 Bg
-73.9386 0.000001 0.000006 12.2891 177.1411 434.1211 Bm
f
0 BB
268.9995 524.2559 m
268.9995 474.6929 228.8218 434.5171 179.2603 434.5171 c
129.6997 434.5171 89.5215 474.6929 89.5215 524.2559 c
89.5215 573.8164 129.6997 613.9922 179.2603 613.9922 c
228.8218 613.9922 268.9995 573.8164 268.9995 524.2559 c
Bb
1 (Unnamed gradient 137) 175.5313 436.6196 87.5633 181.9602 1 0 0 1 0 0 Bg
7.73613 181.7957 187.3605 -7.97294 81.8511 440.606 Xm
343.3376 8068.2783 187.3605 -7.97294 -261.4863 -7627.6729 Bc
4.63318 108.8776 187.3605 -7.97294 81.8511 440.606 Bm
0.765111 17.9798 187.3605 -7.97294 86.4844 549.4834 Bm
1.3602 31.964 187.3605 -7.97294 87.2495 567.4634 Bm
0.977647 22.9743 187.3605 -7.97294 88.6094 599.4272 Bm
343.3376 8068.2783 187.3605 -7.97294 89.5874 622.4019 Bc
f
0 BB
259.9146 524.2559 m
259.9146 479.7119 223.8047 443.6011 179.2603 443.6011 c
134.7168 443.6011 98.6074 479.7119 98.6074 524.2559 c
98.6074 568.7988 134.7168 604.9092 179.2603 604.9092 c
223.8047 604.9092 259.9146 568.7988 259.9146 524.2559 c
Bb
1 (Unnamed gradient 142) 180.9927 440.4839 91.1842 168.7643 1 0 0 1 0 0 Bg
-3.4878 168.7282 167.0781 3.45369 97.4536 438.7568 Xm
-166.8788 8073.0371 167.0781 3.45369 264.3325 -7634.2803 Bc
-3.4878 168.7282 167.0781 3.45369 97.4536 438.7568 Bm
-166.8788 8073.0371 167.0781 3.45369 93.9658 607.4849 Bc
f
0 BB
253.71 524.2559 m
253.71 483.1367 220.3779 449.8047 179.2603 449.8047 c
138.144 449.8047 104.812 483.1367 104.812 524.2559 c
104.812 565.3726 138.144 598.7046 179.2603 598.7046 c
220.3779 598.7046 253.71 565.3726 253.71 524.2559 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 284) 182.249 450.3027 89.2535 136.0658 1 0 0 1 0 0 Bg
1.77274 136.0542 136.0542 -1.77274 182.249 450.3027 Bm
f
0 BB
236.4258 547.7388 m
236.4258 522.0396 210.8325 501.2051 179.2603 501.2051 c
147.6895 501.2051 122.0947 522.0396 122.0947 547.7388 c
122.0947 573.438 147.6895 594.2729 179.2603 594.2729 c
210.8325 594.2729 236.4258 573.438 236.4258 547.7388 c
Bb
1 (Unnamed gradient 296) 179.2603 585.4165 -90 74.8617 1 0 0 1 0 0 Bg
-0.000003 -74.8617 -118.3311 0.000005 238.4258 585.4165 Xm
-0.000353 -8084.1167 -118.3311 0.000005 238.4263 8669.5332 Bc
-0.000002 -53.884 -118.3311 0.000005 238.4258 585.4165 Bm
-0.000001 -20.9778 -118.3311 0.000005 238.4258 531.5327 Bm
-0.000353 -8084.1167 -118.3311 0.000005 238.4258 510.5547 Bc
f
0 BB
0 Ap
0.223529 1 1 0.164706 0.666667 0.066667 0.058824 Xa
0 XR
155.521 478.0923 m
153.4819 480.1328 L
135.1377 498.4766 L
133.0991 500.5146 L
135.1377 502.5542 L
156.8394 524.2559 L
135.1382 545.9561 L
133.1001 547.9946 L
135.1382 550.0327 L
153.4819 568.3784 L
155.521 570.4165 L
157.5591 568.3784 L
179.2603 546.6772 L
200.9609 568.3784 L
203 570.4165 L
205.0396 568.3784 L
223.3838 550.0327 L
225.4224 547.9946 L
223.3833 545.9561 L
201.6831 524.2559 L
223.3833 502.5527 L
225.4229 500.5146 L
223.3838 498.4766 L
205.04 480.1309 L
203.002 478.0923 L
200.9624 480.1328 L
179.2612 501.8335 L
157.5591 480.1328 L
155.521 478.0923 L
155.521 478.0923 L
f
221.3457 500.5146 m
197.6055 524.2539 L
221.3462 547.9946 L
203 566.3403 L
179.2603 542.5991 L
155.521 566.3384 L
137.1763 547.9946 L
160.9165 524.2559 L
137.1763 500.5146 L
155.522 482.1709 L
179.2612 505.9102 L
203.0015 482.1709 L
221.3457 500.5146 L
Bb
1 (Unnamed gradient 281) 182.8174 476.8394 94.2891 95.1793 1 0 0 1 0 0 Bg
-7.11837 94.9128 91.229 6.84209 137.2031 473.4185 Xm
-603.9223 8052.395 91.229 6.84209 740.2646 -7567.5029 Bc
-0.62579 8.34397 91.229 6.84209 136.3428 484.8916 Bm
-1.2907 17.2095 91.229 6.84209 135.7168 493.2354 Bm
-0.89957 11.9944 91.229 6.84209 134.4263 510.4448 Bm
-1.21247 16.1665 91.229 6.84209 133.5264 522.4395 Bm
-603.9223 8052.395 91.229 6.84209 132.3145 538.606 Bc
f
0 BB
*u
1 D
0 0 0 0 1 1 1 Xa
204.2715 565.0693 m
203 566.3403 L
180.9551 544.293 L
182.2261 543.0215 L
204.2715 565.0693 L
f
140.1426 548.417 m
156.7925 565.0674 L
155.521 566.3384 L
137.1763 547.9946 L
160.9165 524.2559 L
137.1763 500.5146 L
155.522 482.1709 L
157.2153 483.8643 L
140.1426 500.939 L
163.8813 524.6777 L
140.1426 548.417 L
f
182.2271 506.3325 m
180.5322 504.6387 L
203.0015 482.1709 L
204.6958 483.8643 L
182.2271 506.3325 L
f
*U
1 Ap
0 D
1 XR
497.3848 420.1294 m
334.7197 420.1294 L
334.7197 451.5132 L
497.3848 451.5132 L
497.3848 420.1294 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8376) 3342.2666 -4732.5977 -180 35.1707 2.1022 0 0 0.3494 -15312.5664 3515.2063 Bg
-73.9359 0.000001 0.000006 12.2886 413.2109 434.1196 Bm
f
0 BB
505.0693 524.2544 m
505.0693 474.6924 464.8906 434.5151 415.3301 434.5151 c
365.7695 434.5151 325.5908 474.6924 325.5908 524.2544 c
325.5908 573.8159 365.7695 613.9932 415.3301 613.9932 c
464.8906 613.9932 505.0693 573.8159 505.0693 524.2544 c
Bb
1 (Unnamed gradient 137) 411.6006 436.6177 87.5633 181.9632 1 0 0 1 0 0 Bg
7.73626 181.7986 187.3609 -7.97296 317.9199 440.604 Xm
353.3742 8304.1348 187.3609 -7.97296 -35.4541 -7863.5303 Bc
4.63325 108.8794 187.3609 -7.97296 317.9199 440.604 Bm
0.765124 17.9801 187.3609 -7.97296 322.5527 549.4834 Bm
1.36022 31.9646 187.3609 -7.97296 323.3184 567.4634 Bm
0.977663 22.9746 187.3609 -7.97296 324.6787 599.4282 Bm
353.3742 8304.1348 187.3609 -7.97296 325.6563 622.4028 Bc
f
0 BB
495.9834 524.2544 m
495.9834 479.7104 459.874 443.6001 415.3301 443.6001 c
370.7861 443.6001 334.6768 479.7104 334.6768 524.2544 c
334.6768 568.7983 370.7861 604.9072 415.3301 604.9072 c
459.874 604.9072 495.9834 568.7983 495.9834 524.2544 c
Bb
1 (Unnamed gradient 142) 417.0625 440.4829 91.1842 168.7632 1 0 0 1 0 0 Bg
-3.48778 168.7272 167.0777 3.45368 333.5225 438.7559 Xm
-171.7576 8309.0557 167.0777 3.45368 505.2803 -7870.2998 Bc
-3.48778 168.7272 167.0777 3.45368 333.5225 438.7559 Bm
-171.7576 8309.0557 167.0777 3.45368 330.0352 607.4829 Bc
f
0 BB
489.7793 524.2544 m
489.7793 483.1372 456.4473 449.8057 415.3301 449.8057 c
374.2129 449.8057 340.8818 483.1372 340.8818 524.2544 c
340.8818 565.3716 374.2129 598.7031 415.3301 598.7031 c
456.4473 598.7031 489.7793 565.3716 489.7793 524.2544 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 325) 418.3184 450.3032 89.2535 136.0658 1 0 0 1 0 0 Bg
1.77274 136.0542 136.0542 -1.77274 418.3184 450.3032 Bm
f
0 BB
472.4951 547.7388 m
472.4951 522.0396 446.9014 501.2051 415.3301 501.2051 c
383.7588 501.2051 358.1641 522.0396 358.1641 547.7388 c
358.1641 573.438 383.7588 594.2715 415.3301 594.2715 c
446.9014 594.2715 472.4951 573.438 472.4951 547.7388 c
Bb
1 (Unnamed gradient 329) 415.3301 585.415 -90 74.8606 1 0 0 1 0 0 Bg
-0.000003 -74.8606 -118.3311 0.000005 474.4951 585.415 Xm
-0.000364 -8320.1865 -118.3311 0.000005 474.4951 8905.6016 Bc
0 -8.63779 -118.3311 0.000005 474.4951 585.415 Bm
-0.000003 -63.7549 -118.3311 0.000005 474.4951 576.7773 Bm
-0.000364 -8320.1865 -118.3311 0.000005 474.4951 513.0225 Bc
f
0 BB
0 Ap
0.709804 0.105882 1 0.007843 0.329412 0.65098 0.098039 Xa
0 XR
409.9795 470.5884 m
364.4824 515.8354 L
362.7539 517.8623 L
364.6377 519.7441 L
384.4844 539.5908 L
386.8418 541.9502 L
388.834 539.2759 L
410.7646 512.2471 L
448.0156 565.2808 L
450.0361 567.7227 L
452.2744 565.4814 L
472.124 545.6328 L
474.0313 543.7271 L
472.2578 541.6978 L
414.3438 470.562 L
412.2969 468.2563 L
409.9795 470.5884 L
f
470.0859 543.5957 m
450.2383 563.4434 L
410.6465 507.5796 L
386.5225 537.5532 L
366.6758 517.7056 L
412.1729 472.459 L
470.0859 543.5957 L
Bb
1 (Unnamed gradient 308) 422.9717 469.4336 94.2891 95.6139 1 0 0 1 0 0 Bg
-7.15087 95.3461 108.7514 8.15626 368.5967 465.3555 Xm
-621.882 8291.8594 108.7514 8.15626 990.4785 -7826.5049 Bc
-1.49304 19.9074 108.7514 8.15626 368.5967 465.3555 Bm
-1.29659 17.2881 108.7514 8.15626 367.1035 485.2627 Bm
-0.903677 12.0492 108.7514 8.15626 365.8066 502.5508 Bm
-1.21801 16.2403 108.7514 8.15626 364.9033 514.6001 Bm
-621.882 8291.8594 108.7514 8.15626 363.6855 530.8403 Bc
f
0 BB
*u
1 D
0 0 0 0 1 1 1 Xa
450.2383 563.4434 m
412.9648 510.3838 L
415.0527 507.5796 L
452.6494 561.0313 L
450.2383 563.4434 L
f
388.4043 535.0278 m
386.5225 537.5532 L
366.6758 517.7056 L
412.1729 472.459 L
414.3203 475.0942 L
371.082 517.7056 L
388.4043 535.0278 L
f
*U
1 Ap
0 D
1 XR
497.3848 191.6152 m
334.7188 191.6152 L
334.7188 223 L
497.3848 223 L
497.3848 191.6152 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8376) 3342.2656 -5386.6152 -180 35.172 2.1022 0 0 0.3494 -15312.5664 3515.2063 Bg
-73.9386 0.000001 0.000006 12.2891 413.209 205.6064 Bm
f
0 BB
505.0693 295.7402 m
505.0693 246.1787 464.8936 206.0029 415.3301 206.0029 c
365.7695 206.0029 325.5918 246.1787 325.5918 295.7402 c
325.5918 345.3018 365.7695 385.4775 415.3301 385.4775 c
464.8936 385.4775 505.0693 345.3018 505.0693 295.7402 c
Bb
1 (Unnamed gradient 137) 411.6006 208.1055 87.5633 181.9597 1 0 0 1 0 0 Bg
7.73611 181.7952 187.3599 -7.97292 317.9219 212.0918 Xm
353.3741 8304.1338 187.3599 -7.97292 -35.4521 -8092.042 Bc
4.63317 108.8773 187.3599 -7.97292 317.9219 212.0918 Bm
0.765109 17.9797 187.3599 -7.97292 322.5547 320.9688 Bm
1.36019 31.964 187.3599 -7.97292 323.3203 338.9492 Bm
0.977644 22.9742 187.3599 -7.97292 324.6807 370.9131 Bm
353.3741 8304.1338 187.3599 -7.97292 325.6582 393.8867 Bc
f
0 BB
495.9854 295.7402 m
495.9854 251.1963 459.875 215.0869 415.3301 215.0869 c
370.7861 215.0869 334.6768 251.1963 334.6768 295.7402 c
334.6768 340.2842 370.7861 376.3945 415.3301 376.3945 c
459.875 376.3945 495.9854 340.2842 495.9854 295.7402 c
Bb
1 (Unnamed gradient 142) 417.0635 211.9688 91.1842 168.7643 1 0 0 1 0 0 Bg
-3.4878 168.7282 167.0796 3.45373 333.5225 210.2422 Xm
-171.7576 8309.0557 167.0796 3.45373 505.2803 -8098.8135 Bc
-3.4878 168.7282 167.0796 3.45373 333.5225 210.2422 Bm
-171.7576 8309.0557 167.0796 3.45373 330.0342 378.9707 Bc
f
0 BB
489.7813 295.7402 m
489.7813 254.6221 456.4482 221.29 415.3301 221.29 c
374.2139 221.29 340.8818 254.6221 340.8818 295.7402 c
340.8818 336.8574 374.2139 370.1904 415.3301 370.1904 c
456.4482 370.1904 489.7813 336.8574 489.7813 295.7402 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 224) 418.3203 221.7881 89.2535 136.0658 1 0 0 1 0 0 Bg
1.77274 136.0542 136.0542 -1.77274 418.3203 221.7881 Bm
f
0 BB
472.498 319.2246 m
472.498 293.5244 446.9023 272.6904 415.3301 272.6904 c
383.7598 272.6904 358.165 293.5244 358.165 319.2246 c
358.165 344.9229 383.7598 365.7578 415.3301 365.7578 c
446.9023 365.7578 472.498 344.9229 472.498 319.2246 c
Bb
1 (Unnamed gradient 235) 415.332 356.9014 -90 74.8614 1 0 0 1 0 0 Bg
-0.000003 -74.8614 -118.333 0.000005 474.498 356.9014 Xm
-0.000364 -8320.1885 -118.333 0.000005 474.498 8677.0898 Bc
-0.000002 -37.0194 -118.333 0.000005 474.498 356.9014 Bm
-0.000002 -37.842 -118.333 0.000005 474.498 319.8818 Bm
-0.000364 -8320.1885 -118.333 0.000005 474.498 282.04 Bc
f
0 BB
0 Ap
0.94902 0.721569 0 0 0 0.341176 0.678431 Xa
0 XR
368.7871 279.8867 m
365.9043 279.8867 L
365.9043 282.7695 L
365.9033 308.71 L
365.9033 311.5928 L
368.7852 311.5928 L
461.876 311.5928 L
464.7598 311.5928 L
464.7598 308.71 L
464.7598 282.7695 L
464.7598 279.8867 L
461.876 279.8867 L
368.7871 279.8867 L
f
0.8 0.54902 0 0 0.066667 0.454902 0.909804 Xa
464.7598 308.71 m
464.7598 311.5928 L
461.876 311.5928 L
368.7852 311.5928 L
365.9033 311.5928 L
365.9033 308.71 L
365.9033 295.835 L
370.5342 289.3652 377.0273 283.8857 384.7861 279.8867 C
445.875 279.8867 L
453.6338 283.8857 460.127 289.3652 464.7598 295.8379 C
464.7598 308.71 L
f
461.876 308.7119 m
368.7852 308.71 L
368.7871 282.7695 L
461.876 282.7695 L
461.876 308.7119 L
Bb
1 (Unnamed gradient 244) 415.3301 281.958 90 18.1375 1 0 0 1 0 0 Bg
-0.000001 18.1375 97.0908 0.000004 366.7852 281.958 Xm
-0.000363 8310.5186 97.0908 0.000004 366.7852 -8028.5596 Bc
-0.000001 18.1375 97.0908 0.000004 366.7852 281.958 Bm
-0.000363 8310.5186 97.0908 0.000004 366.7852 300.0957 Bc
f
0 BB
461.876 308.7119 m
368.7852 308.71 L
368.7852 292.2041 L
371.9014 288.6543 375.6143 285.4766 379.8047 282.7695 C
450.8574 282.7695 L
455.0469 285.4766 458.7607 288.6543 461.876 292.2041 C
461.876 308.7119 L
Bb
1 (Unnamed gradient 202) 416.8994 287.1807 96.7401 56.3165 1 0 0 1 0 0 Bg
-6.60963 55.9272 97.7049 11.547 368.0469 281.4072 Xm
-976.6323 8263.7549 97.7049 11.547 1344.6787 -7982.3486 Bc
-6.60963 55.9272 97.7049 11.547 368.0469 281.4072 Bm
-976.6323 8263.7549 97.7049 11.547 361.4375 337.334 Bc
f
0 BB
461.876 308.71 m
368.7852 308.71 L
368.7852 306.0273 L
368.7852 306.0273 L
368.7871 282.7695 L
371.3291 282.7695 L
371.3281 306.0273 L
461.876 306.0273 L
461.876 308.71 L
Bb
1 (Unnamed gradient 206) 369.9238 313.5352 -21.4006 26.9416 1 0 0 1 0 0 Bg
25.084 -9.83062 -22.6663 -57.8358 381.2568 342.4531 Xm
7695.3525 -3015.8687 -22.6663 -57.8358 -7308.7207 3356.2153 Bc
19.7089 -7.72405 -22.6663 -57.8358 386.6318 340.3467 Bm
7695.3525 -3015.8687 -22.6663 -57.8358 406.3408 332.623 Bc
f
0 BB
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
